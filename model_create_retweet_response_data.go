/*
Twitter OpenAPI

Twitter OpenAPI(Swagger) specification

API version: 0.0.1
Contact: yuki@yuki0311.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the CreateRetweetResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateRetweetResponseData{}

// CreateRetweetResponseData struct for CreateRetweetResponseData
type CreateRetweetResponseData struct {
	CreateRetweet CreateRetweetResponseResult `json:"create_retweet"`
}

type _CreateRetweetResponseData CreateRetweetResponseData

// NewCreateRetweetResponseData instantiates a new CreateRetweetResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateRetweetResponseData(createRetweet CreateRetweetResponseResult) *CreateRetweetResponseData {
	this := CreateRetweetResponseData{}
	this.CreateRetweet = createRetweet
	return &this
}

// NewCreateRetweetResponseDataWithDefaults instantiates a new CreateRetweetResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateRetweetResponseDataWithDefaults() *CreateRetweetResponseData {
	this := CreateRetweetResponseData{}
	return &this
}

// GetCreateRetweet returns the CreateRetweet field value
func (o *CreateRetweetResponseData) GetCreateRetweet() CreateRetweetResponseResult {
	if o == nil {
		var ret CreateRetweetResponseResult
		return ret
	}

	return o.CreateRetweet
}

// GetCreateRetweetOk returns a tuple with the CreateRetweet field value
// and a boolean to check if the value has been set.
func (o *CreateRetweetResponseData) GetCreateRetweetOk() (*CreateRetweetResponseResult, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreateRetweet, true
}

// SetCreateRetweet sets field value
func (o *CreateRetweetResponseData) SetCreateRetweet(v CreateRetweetResponseResult) {
	o.CreateRetweet = v
}

func (o CreateRetweetResponseData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateRetweetResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["create_retweet"] = o.CreateRetweet
	return toSerialize, nil
}

func (o *CreateRetweetResponseData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"create_retweet",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateRetweetResponseData := _CreateRetweetResponseData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateRetweetResponseData)

	if err != nil {
		return err
	}

	*o = CreateRetweetResponseData(varCreateRetweetResponseData)

	return err
}

type NullableCreateRetweetResponseData struct {
	value *CreateRetweetResponseData
	isSet bool
}

func (v NullableCreateRetweetResponseData) Get() *CreateRetweetResponseData {
	return v.value
}

func (v *NullableCreateRetweetResponseData) Set(val *CreateRetweetResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateRetweetResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateRetweetResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateRetweetResponseData(val *CreateRetweetResponseData) *NullableCreateRetweetResponseData {
	return &NullableCreateRetweetResponseData{value: val, isSet: true}
}

func (v NullableCreateRetweetResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateRetweetResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
