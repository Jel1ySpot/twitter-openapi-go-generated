/*
Twitter OpenAPI

Twitter OpenAPI(Swagger) specification

API version: 0.0.1
Contact: yuki@yuki0311.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ExtMediaAvailability type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExtMediaAvailability{}

// ExtMediaAvailability struct for ExtMediaAvailability
type ExtMediaAvailability struct {
	Reason *string `json:"reason,omitempty"`
	Status *string `json:"status,omitempty"`
}

// NewExtMediaAvailability instantiates a new ExtMediaAvailability object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExtMediaAvailability() *ExtMediaAvailability {
	this := ExtMediaAvailability{}
	return &this
}

// NewExtMediaAvailabilityWithDefaults instantiates a new ExtMediaAvailability object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExtMediaAvailabilityWithDefaults() *ExtMediaAvailability {
	this := ExtMediaAvailability{}
	return &this
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *ExtMediaAvailability) GetReason() string {
	if o == nil || IsNil(o.Reason) {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtMediaAvailability) GetReasonOk() (*string, bool) {
	if o == nil || IsNil(o.Reason) {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *ExtMediaAvailability) HasReason() bool {
	if o != nil && !IsNil(o.Reason) {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *ExtMediaAvailability) SetReason(v string) {
	o.Reason = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ExtMediaAvailability) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtMediaAvailability) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ExtMediaAvailability) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ExtMediaAvailability) SetStatus(v string) {
	o.Status = &v
}

func (o ExtMediaAvailability) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExtMediaAvailability) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Reason) {
		toSerialize["reason"] = o.Reason
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableExtMediaAvailability struct {
	value *ExtMediaAvailability
	isSet bool
}

func (v NullableExtMediaAvailability) Get() *ExtMediaAvailability {
	return v.value
}

func (v *NullableExtMediaAvailability) Set(val *ExtMediaAvailability) {
	v.value = val
	v.isSet = true
}

func (v NullableExtMediaAvailability) IsSet() bool {
	return v.isSet
}

func (v *NullableExtMediaAvailability) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExtMediaAvailability(val *ExtMediaAvailability) *NullableExtMediaAvailability {
	return &NullableExtMediaAvailability{value: val, isSet: true}
}

func (v NullableExtMediaAvailability) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExtMediaAvailability) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


