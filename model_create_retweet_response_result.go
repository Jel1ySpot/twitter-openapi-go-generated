/*
Twitter OpenAPI

Twitter OpenAPI(Swagger) specification

API version: 0.0.1
Contact: yuki@yuki0311.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateRetweetResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateRetweetResponseResult{}

// CreateRetweetResponseResult struct for CreateRetweetResponseResult
type CreateRetweetResponseResult struct {
	RetweetResults CreateRetweet `json:"retweet_results"`
}

type _CreateRetweetResponseResult CreateRetweetResponseResult

// NewCreateRetweetResponseResult instantiates a new CreateRetweetResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateRetweetResponseResult(retweetResults CreateRetweet) *CreateRetweetResponseResult {
	this := CreateRetweetResponseResult{}
	this.RetweetResults = retweetResults
	return &this
}

// NewCreateRetweetResponseResultWithDefaults instantiates a new CreateRetweetResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateRetweetResponseResultWithDefaults() *CreateRetweetResponseResult {
	this := CreateRetweetResponseResult{}
	return &this
}

// GetRetweetResults returns the RetweetResults field value
func (o *CreateRetweetResponseResult) GetRetweetResults() CreateRetweet {
	if o == nil {
		var ret CreateRetweet
		return ret
	}

	return o.RetweetResults
}

// GetRetweetResultsOk returns a tuple with the RetweetResults field value
// and a boolean to check if the value has been set.
func (o *CreateRetweetResponseResult) GetRetweetResultsOk() (*CreateRetweet, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RetweetResults, true
}

// SetRetweetResults sets field value
func (o *CreateRetweetResponseResult) SetRetweetResults(v CreateRetweet) {
	o.RetweetResults = v
}

func (o CreateRetweetResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateRetweetResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["retweet_results"] = o.RetweetResults
	return toSerialize, nil
}

func (o *CreateRetweetResponseResult) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"retweet_results",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateRetweetResponseResult := _CreateRetweetResponseResult{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateRetweetResponseResult)

	if err != nil {
		return err
	}

	*o = CreateRetweetResponseResult(varCreateRetweetResponseResult)

	return err
}

type NullableCreateRetweetResponseResult struct {
	value *CreateRetweetResponseResult
	isSet bool
}

func (v NullableCreateRetweetResponseResult) Get() *CreateRetweetResponseResult {
	return v.value
}

func (v *NullableCreateRetweetResponseResult) Set(val *CreateRetweetResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateRetweetResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateRetweetResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateRetweetResponseResult(val *CreateRetweetResponseResult) *NullableCreateRetweetResponseResult {
	return &NullableCreateRetweetResponseResult{value: val, isSet: true}
}

func (v NullableCreateRetweetResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateRetweetResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


