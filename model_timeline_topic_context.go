/*
Twitter OpenAPI

Twitter OpenAPI(Swagger) specification

API version: 0.0.1
Contact: yuki@yuki0311.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TimelineTopicContext type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TimelineTopicContext{}

// TimelineTopicContext struct for TimelineTopicContext
type TimelineTopicContext struct {
	FunctionalityType *string                 `json:"functionalityType,omitempty"`
	Topic             *TopicContext           `json:"topic,omitempty"`
	Type              *SocialContextUnionType `json:"type,omitempty"`
}

// NewTimelineTopicContext instantiates a new TimelineTopicContext object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTimelineTopicContext() *TimelineTopicContext {
	this := TimelineTopicContext{}
	return &this
}

// NewTimelineTopicContextWithDefaults instantiates a new TimelineTopicContext object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTimelineTopicContextWithDefaults() *TimelineTopicContext {
	this := TimelineTopicContext{}
	return &this
}

// GetFunctionalityType returns the FunctionalityType field value if set, zero value otherwise.
func (o *TimelineTopicContext) GetFunctionalityType() string {
	if o == nil || IsNil(o.FunctionalityType) {
		var ret string
		return ret
	}
	return *o.FunctionalityType
}

// GetFunctionalityTypeOk returns a tuple with the FunctionalityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimelineTopicContext) GetFunctionalityTypeOk() (*string, bool) {
	if o == nil || IsNil(o.FunctionalityType) {
		return nil, false
	}
	return o.FunctionalityType, true
}

// HasFunctionalityType returns a boolean if a field has been set.
func (o *TimelineTopicContext) HasFunctionalityType() bool {
	if o != nil && !IsNil(o.FunctionalityType) {
		return true
	}

	return false
}

// SetFunctionalityType gets a reference to the given string and assigns it to the FunctionalityType field.
func (o *TimelineTopicContext) SetFunctionalityType(v string) {
	o.FunctionalityType = &v
}

// GetTopic returns the Topic field value if set, zero value otherwise.
func (o *TimelineTopicContext) GetTopic() TopicContext {
	if o == nil || IsNil(o.Topic) {
		var ret TopicContext
		return ret
	}
	return *o.Topic
}

// GetTopicOk returns a tuple with the Topic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimelineTopicContext) GetTopicOk() (*TopicContext, bool) {
	if o == nil || IsNil(o.Topic) {
		return nil, false
	}
	return o.Topic, true
}

// HasTopic returns a boolean if a field has been set.
func (o *TimelineTopicContext) HasTopic() bool {
	if o != nil && !IsNil(o.Topic) {
		return true
	}

	return false
}

// SetTopic gets a reference to the given TopicContext and assigns it to the Topic field.
func (o *TimelineTopicContext) SetTopic(v TopicContext) {
	o.Topic = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *TimelineTopicContext) GetType() SocialContextUnionType {
	if o == nil || IsNil(o.Type) {
		var ret SocialContextUnionType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimelineTopicContext) GetTypeOk() (*SocialContextUnionType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *TimelineTopicContext) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given SocialContextUnionType and assigns it to the Type field.
func (o *TimelineTopicContext) SetType(v SocialContextUnionType) {
	o.Type = &v
}

func (o TimelineTopicContext) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TimelineTopicContext) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FunctionalityType) {
		toSerialize["functionalityType"] = o.FunctionalityType
	}
	if !IsNil(o.Topic) {
		toSerialize["topic"] = o.Topic
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableTimelineTopicContext struct {
	value *TimelineTopicContext
	isSet bool
}

func (v NullableTimelineTopicContext) Get() *TimelineTopicContext {
	return v.value
}

func (v *NullableTimelineTopicContext) Set(val *TimelineTopicContext) {
	v.value = val
	v.isSet = true
}

func (v NullableTimelineTopicContext) IsSet() bool {
	return v.isSet
}

func (v *NullableTimelineTopicContext) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTimelineTopicContext(val *TimelineTopicContext) *NullableTimelineTopicContext {
	return &NullableTimelineTopicContext{value: val, isSet: true}
}

func (v NullableTimelineTopicContext) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTimelineTopicContext) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
