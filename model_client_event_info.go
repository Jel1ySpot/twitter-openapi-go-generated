/*
Twitter OpenAPI

Twitter OpenAPI(Swagger) specification

API version: 0.0.1
Contact: yuki@yuki0311.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ClientEventInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClientEventInfo{}

// ClientEventInfo struct for ClientEventInfo
type ClientEventInfo struct {
	Component *string `json:"component,omitempty"`
	Details map[string]interface{} `json:"details,omitempty"`
	Element *string `json:"element,omitempty"`
}

// NewClientEventInfo instantiates a new ClientEventInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClientEventInfo() *ClientEventInfo {
	this := ClientEventInfo{}
	return &this
}

// NewClientEventInfoWithDefaults instantiates a new ClientEventInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClientEventInfoWithDefaults() *ClientEventInfo {
	this := ClientEventInfo{}
	return &this
}

// GetComponent returns the Component field value if set, zero value otherwise.
func (o *ClientEventInfo) GetComponent() string {
	if o == nil || IsNil(o.Component) {
		var ret string
		return ret
	}
	return *o.Component
}

// GetComponentOk returns a tuple with the Component field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientEventInfo) GetComponentOk() (*string, bool) {
	if o == nil || IsNil(o.Component) {
		return nil, false
	}
	return o.Component, true
}

// HasComponent returns a boolean if a field has been set.
func (o *ClientEventInfo) HasComponent() bool {
	if o != nil && !IsNil(o.Component) {
		return true
	}

	return false
}

// SetComponent gets a reference to the given string and assigns it to the Component field.
func (o *ClientEventInfo) SetComponent(v string) {
	o.Component = &v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *ClientEventInfo) GetDetails() map[string]interface{} {
	if o == nil || IsNil(o.Details) {
		var ret map[string]interface{}
		return ret
	}
	return o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientEventInfo) GetDetailsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Details) {
		return map[string]interface{}{}, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *ClientEventInfo) HasDetails() bool {
	if o != nil && !IsNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given map[string]interface{} and assigns it to the Details field.
func (o *ClientEventInfo) SetDetails(v map[string]interface{}) {
	o.Details = v
}

// GetElement returns the Element field value if set, zero value otherwise.
func (o *ClientEventInfo) GetElement() string {
	if o == nil || IsNil(o.Element) {
		var ret string
		return ret
	}
	return *o.Element
}

// GetElementOk returns a tuple with the Element field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientEventInfo) GetElementOk() (*string, bool) {
	if o == nil || IsNil(o.Element) {
		return nil, false
	}
	return o.Element, true
}

// HasElement returns a boolean if a field has been set.
func (o *ClientEventInfo) HasElement() bool {
	if o != nil && !IsNil(o.Element) {
		return true
	}

	return false
}

// SetElement gets a reference to the given string and assigns it to the Element field.
func (o *ClientEventInfo) SetElement(v string) {
	o.Element = &v
}

func (o ClientEventInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientEventInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Component) {
		toSerialize["component"] = o.Component
	}
	if !IsNil(o.Details) {
		toSerialize["details"] = o.Details
	}
	if !IsNil(o.Element) {
		toSerialize["element"] = o.Element
	}
	return toSerialize, nil
}

type NullableClientEventInfo struct {
	value *ClientEventInfo
	isSet bool
}

func (v NullableClientEventInfo) Get() *ClientEventInfo {
	return v.value
}

func (v *NullableClientEventInfo) Set(val *ClientEventInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableClientEventInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableClientEventInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientEventInfo(val *ClientEventInfo) *NullableClientEventInfo {
	return &NullableClientEventInfo{value: val, isSet: true}
}

func (v NullableClientEventInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientEventInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


