/*
Twitter OpenAPI

Twitter OpenAPI(Swagger) specification

API version: 0.0.1
Contact: yuki@yuki0311.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the MediaVisibilityResultsBlurredImageInterstitial type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MediaVisibilityResultsBlurredImageInterstitial{}

// MediaVisibilityResultsBlurredImageInterstitial struct for MediaVisibilityResultsBlurredImageInterstitial
type MediaVisibilityResultsBlurredImageInterstitial struct {
	Opacity float32               `json:"opacity"`
	Text    TweetInterstitialText `json:"text"`
	Title   TweetInterstitialText `json:"title"`
}

type _MediaVisibilityResultsBlurredImageInterstitial MediaVisibilityResultsBlurredImageInterstitial

// NewMediaVisibilityResultsBlurredImageInterstitial instantiates a new MediaVisibilityResultsBlurredImageInterstitial object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMediaVisibilityResultsBlurredImageInterstitial(opacity float32, text TweetInterstitialText, title TweetInterstitialText) *MediaVisibilityResultsBlurredImageInterstitial {
	this := MediaVisibilityResultsBlurredImageInterstitial{}
	this.Opacity = opacity
	this.Text = text
	this.Title = title
	return &this
}

// NewMediaVisibilityResultsBlurredImageInterstitialWithDefaults instantiates a new MediaVisibilityResultsBlurredImageInterstitial object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMediaVisibilityResultsBlurredImageInterstitialWithDefaults() *MediaVisibilityResultsBlurredImageInterstitial {
	this := MediaVisibilityResultsBlurredImageInterstitial{}
	return &this
}

// GetOpacity returns the Opacity field value
func (o *MediaVisibilityResultsBlurredImageInterstitial) GetOpacity() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Opacity
}

// GetOpacityOk returns a tuple with the Opacity field value
// and a boolean to check if the value has been set.
func (o *MediaVisibilityResultsBlurredImageInterstitial) GetOpacityOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Opacity, true
}

// SetOpacity sets field value
func (o *MediaVisibilityResultsBlurredImageInterstitial) SetOpacity(v float32) {
	o.Opacity = v
}

// GetText returns the Text field value
func (o *MediaVisibilityResultsBlurredImageInterstitial) GetText() TweetInterstitialText {
	if o == nil {
		var ret TweetInterstitialText
		return ret
	}

	return o.Text
}

// GetTextOk returns a tuple with the Text field value
// and a boolean to check if the value has been set.
func (o *MediaVisibilityResultsBlurredImageInterstitial) GetTextOk() (*TweetInterstitialText, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Text, true
}

// SetText sets field value
func (o *MediaVisibilityResultsBlurredImageInterstitial) SetText(v TweetInterstitialText) {
	o.Text = v
}

// GetTitle returns the Title field value
func (o *MediaVisibilityResultsBlurredImageInterstitial) GetTitle() TweetInterstitialText {
	if o == nil {
		var ret TweetInterstitialText
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *MediaVisibilityResultsBlurredImageInterstitial) GetTitleOk() (*TweetInterstitialText, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *MediaVisibilityResultsBlurredImageInterstitial) SetTitle(v TweetInterstitialText) {
	o.Title = v
}

func (o MediaVisibilityResultsBlurredImageInterstitial) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MediaVisibilityResultsBlurredImageInterstitial) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["opacity"] = o.Opacity
	toSerialize["text"] = o.Text
	toSerialize["title"] = o.Title
	return toSerialize, nil
}

func (o *MediaVisibilityResultsBlurredImageInterstitial) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"opacity",
		"text",
		"title",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMediaVisibilityResultsBlurredImageInterstitial := _MediaVisibilityResultsBlurredImageInterstitial{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMediaVisibilityResultsBlurredImageInterstitial)

	if err != nil {
		return err
	}

	*o = MediaVisibilityResultsBlurredImageInterstitial(varMediaVisibilityResultsBlurredImageInterstitial)

	return err
}

type NullableMediaVisibilityResultsBlurredImageInterstitial struct {
	value *MediaVisibilityResultsBlurredImageInterstitial
	isSet bool
}

func (v NullableMediaVisibilityResultsBlurredImageInterstitial) Get() *MediaVisibilityResultsBlurredImageInterstitial {
	return v.value
}

func (v *NullableMediaVisibilityResultsBlurredImageInterstitial) Set(val *MediaVisibilityResultsBlurredImageInterstitial) {
	v.value = val
	v.isSet = true
}

func (v NullableMediaVisibilityResultsBlurredImageInterstitial) IsSet() bool {
	return v.isSet
}

func (v *NullableMediaVisibilityResultsBlurredImageInterstitial) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMediaVisibilityResultsBlurredImageInterstitial(val *MediaVisibilityResultsBlurredImageInterstitial) *NullableMediaVisibilityResultsBlurredImageInterstitial {
	return &NullableMediaVisibilityResultsBlurredImageInterstitial{value: val, isSet: true}
}

func (v NullableMediaVisibilityResultsBlurredImageInterstitial) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMediaVisibilityResultsBlurredImageInterstitial) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
