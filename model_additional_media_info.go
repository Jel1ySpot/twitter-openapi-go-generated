/*
Twitter OpenAPI

Twitter OpenAPI(Swagger) specification

API version: 0.0.1
Contact: yuki@yuki0311.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AdditionalMediaInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdditionalMediaInfo{}

// AdditionalMediaInfo struct for AdditionalMediaInfo
type AdditionalMediaInfo struct {
	CallToActions *AdditionalMediaInfoCallToActions `json:"call_to_actions,omitempty"`
	Description *string `json:"description,omitempty"`
	Embeddable *bool `json:"embeddable,omitempty"`
	Monetizable bool `json:"monetizable"`
	SourceUser *UserResultCore `json:"source_user,omitempty"`
	Title *string `json:"title,omitempty"`
}

type _AdditionalMediaInfo AdditionalMediaInfo

// NewAdditionalMediaInfo instantiates a new AdditionalMediaInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdditionalMediaInfo(monetizable bool) *AdditionalMediaInfo {
	this := AdditionalMediaInfo{}
	this.Monetizable = monetizable
	return &this
}

// NewAdditionalMediaInfoWithDefaults instantiates a new AdditionalMediaInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdditionalMediaInfoWithDefaults() *AdditionalMediaInfo {
	this := AdditionalMediaInfo{}
	return &this
}

// GetCallToActions returns the CallToActions field value if set, zero value otherwise.
func (o *AdditionalMediaInfo) GetCallToActions() AdditionalMediaInfoCallToActions {
	if o == nil || IsNil(o.CallToActions) {
		var ret AdditionalMediaInfoCallToActions
		return ret
	}
	return *o.CallToActions
}

// GetCallToActionsOk returns a tuple with the CallToActions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdditionalMediaInfo) GetCallToActionsOk() (*AdditionalMediaInfoCallToActions, bool) {
	if o == nil || IsNil(o.CallToActions) {
		return nil, false
	}
	return o.CallToActions, true
}

// HasCallToActions returns a boolean if a field has been set.
func (o *AdditionalMediaInfo) HasCallToActions() bool {
	if o != nil && !IsNil(o.CallToActions) {
		return true
	}

	return false
}

// SetCallToActions gets a reference to the given AdditionalMediaInfoCallToActions and assigns it to the CallToActions field.
func (o *AdditionalMediaInfo) SetCallToActions(v AdditionalMediaInfoCallToActions) {
	o.CallToActions = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AdditionalMediaInfo) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdditionalMediaInfo) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AdditionalMediaInfo) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AdditionalMediaInfo) SetDescription(v string) {
	o.Description = &v
}

// GetEmbeddable returns the Embeddable field value if set, zero value otherwise.
func (o *AdditionalMediaInfo) GetEmbeddable() bool {
	if o == nil || IsNil(o.Embeddable) {
		var ret bool
		return ret
	}
	return *o.Embeddable
}

// GetEmbeddableOk returns a tuple with the Embeddable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdditionalMediaInfo) GetEmbeddableOk() (*bool, bool) {
	if o == nil || IsNil(o.Embeddable) {
		return nil, false
	}
	return o.Embeddable, true
}

// HasEmbeddable returns a boolean if a field has been set.
func (o *AdditionalMediaInfo) HasEmbeddable() bool {
	if o != nil && !IsNil(o.Embeddable) {
		return true
	}

	return false
}

// SetEmbeddable gets a reference to the given bool and assigns it to the Embeddable field.
func (o *AdditionalMediaInfo) SetEmbeddable(v bool) {
	o.Embeddable = &v
}

// GetMonetizable returns the Monetizable field value
func (o *AdditionalMediaInfo) GetMonetizable() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Monetizable
}

// GetMonetizableOk returns a tuple with the Monetizable field value
// and a boolean to check if the value has been set.
func (o *AdditionalMediaInfo) GetMonetizableOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Monetizable, true
}

// SetMonetizable sets field value
func (o *AdditionalMediaInfo) SetMonetizable(v bool) {
	o.Monetizable = v
}

// GetSourceUser returns the SourceUser field value if set, zero value otherwise.
func (o *AdditionalMediaInfo) GetSourceUser() UserResultCore {
	if o == nil || IsNil(o.SourceUser) {
		var ret UserResultCore
		return ret
	}
	return *o.SourceUser
}

// GetSourceUserOk returns a tuple with the SourceUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdditionalMediaInfo) GetSourceUserOk() (*UserResultCore, bool) {
	if o == nil || IsNil(o.SourceUser) {
		return nil, false
	}
	return o.SourceUser, true
}

// HasSourceUser returns a boolean if a field has been set.
func (o *AdditionalMediaInfo) HasSourceUser() bool {
	if o != nil && !IsNil(o.SourceUser) {
		return true
	}

	return false
}

// SetSourceUser gets a reference to the given UserResultCore and assigns it to the SourceUser field.
func (o *AdditionalMediaInfo) SetSourceUser(v UserResultCore) {
	o.SourceUser = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *AdditionalMediaInfo) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdditionalMediaInfo) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *AdditionalMediaInfo) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *AdditionalMediaInfo) SetTitle(v string) {
	o.Title = &v
}

func (o AdditionalMediaInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdditionalMediaInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CallToActions) {
		toSerialize["call_to_actions"] = o.CallToActions
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Embeddable) {
		toSerialize["embeddable"] = o.Embeddable
	}
	toSerialize["monetizable"] = o.Monetizable
	if !IsNil(o.SourceUser) {
		toSerialize["source_user"] = o.SourceUser
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	return toSerialize, nil
}

func (o *AdditionalMediaInfo) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"monetizable",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAdditionalMediaInfo := _AdditionalMediaInfo{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAdditionalMediaInfo)

	if err != nil {
		return err
	}

	*o = AdditionalMediaInfo(varAdditionalMediaInfo)

	return err
}

type NullableAdditionalMediaInfo struct {
	value *AdditionalMediaInfo
	isSet bool
}

func (v NullableAdditionalMediaInfo) Get() *AdditionalMediaInfo {
	return v.value
}

func (v *NullableAdditionalMediaInfo) Set(val *AdditionalMediaInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableAdditionalMediaInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableAdditionalMediaInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdditionalMediaInfo(val *AdditionalMediaInfo) *NullableAdditionalMediaInfo {
	return &NullableAdditionalMediaInfo{value: val, isSet: true}
}

func (v NullableAdditionalMediaInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdditionalMediaInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


