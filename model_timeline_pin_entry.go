/*
Twitter OpenAPI

Twitter OpenAPI(Swagger) specification

API version: 0.0.1
Contact: yuki@yuki0311.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the TimelinePinEntry type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TimelinePinEntry{}

// TimelinePinEntry struct for TimelinePinEntry
type TimelinePinEntry struct {
	Entry TimelineAddEntry `json:"entry"`
	Type  InstructionType  `json:"type"`
}

type _TimelinePinEntry TimelinePinEntry

// NewTimelinePinEntry instantiates a new TimelinePinEntry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTimelinePinEntry(entry TimelineAddEntry, type_ InstructionType) *TimelinePinEntry {
	this := TimelinePinEntry{}
	this.Entry = entry
	this.Type = type_
	return &this
}

// NewTimelinePinEntryWithDefaults instantiates a new TimelinePinEntry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTimelinePinEntryWithDefaults() *TimelinePinEntry {
	this := TimelinePinEntry{}
	return &this
}

// GetEntry returns the Entry field value
func (o *TimelinePinEntry) GetEntry() TimelineAddEntry {
	if o == nil {
		var ret TimelineAddEntry
		return ret
	}

	return o.Entry
}

// GetEntryOk returns a tuple with the Entry field value
// and a boolean to check if the value has been set.
func (o *TimelinePinEntry) GetEntryOk() (*TimelineAddEntry, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Entry, true
}

// SetEntry sets field value
func (o *TimelinePinEntry) SetEntry(v TimelineAddEntry) {
	o.Entry = v
}

// GetType returns the Type field value
func (o *TimelinePinEntry) GetType() InstructionType {
	if o == nil {
		var ret InstructionType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *TimelinePinEntry) GetTypeOk() (*InstructionType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *TimelinePinEntry) SetType(v InstructionType) {
	o.Type = v
}

func (o TimelinePinEntry) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TimelinePinEntry) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["entry"] = o.Entry
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

func (o *TimelinePinEntry) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"entry",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTimelinePinEntry := _TimelinePinEntry{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTimelinePinEntry)

	if err != nil {
		return err
	}

	*o = TimelinePinEntry(varTimelinePinEntry)

	return err
}

type NullableTimelinePinEntry struct {
	value *TimelinePinEntry
	isSet bool
}

func (v NullableTimelinePinEntry) Get() *TimelinePinEntry {
	return v.value
}

func (v *NullableTimelinePinEntry) Set(val *TimelinePinEntry) {
	v.value = val
	v.isSet = true
}

func (v NullableTimelinePinEntry) IsSet() bool {
	return v.isSet
}

func (v *NullableTimelinePinEntry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTimelinePinEntry(val *TimelinePinEntry) *NullableTimelinePinEntry {
	return &NullableTimelinePinEntry{value: val, isSet: true}
}

func (v NullableTimelinePinEntry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTimelinePinEntry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
