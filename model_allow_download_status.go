/*
Twitter OpenAPI

Twitter OpenAPI(Swagger) specification

API version: 0.0.1
Contact: yuki@yuki0311.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AllowDownloadStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AllowDownloadStatus{}

// AllowDownloadStatus struct for AllowDownloadStatus
type AllowDownloadStatus struct {
	AllowDownload *bool `json:"allow_download,omitempty"`
}

// NewAllowDownloadStatus instantiates a new AllowDownloadStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAllowDownloadStatus() *AllowDownloadStatus {
	this := AllowDownloadStatus{}
	return &this
}

// NewAllowDownloadStatusWithDefaults instantiates a new AllowDownloadStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAllowDownloadStatusWithDefaults() *AllowDownloadStatus {
	this := AllowDownloadStatus{}
	return &this
}

// GetAllowDownload returns the AllowDownload field value if set, zero value otherwise.
func (o *AllowDownloadStatus) GetAllowDownload() bool {
	if o == nil || IsNil(o.AllowDownload) {
		var ret bool
		return ret
	}
	return *o.AllowDownload
}

// GetAllowDownloadOk returns a tuple with the AllowDownload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllowDownloadStatus) GetAllowDownloadOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowDownload) {
		return nil, false
	}
	return o.AllowDownload, true
}

// HasAllowDownload returns a boolean if a field has been set.
func (o *AllowDownloadStatus) HasAllowDownload() bool {
	if o != nil && !IsNil(o.AllowDownload) {
		return true
	}

	return false
}

// SetAllowDownload gets a reference to the given bool and assigns it to the AllowDownload field.
func (o *AllowDownloadStatus) SetAllowDownload(v bool) {
	o.AllowDownload = &v
}

func (o AllowDownloadStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AllowDownloadStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllowDownload) {
		toSerialize["allow_download"] = o.AllowDownload
	}
	return toSerialize, nil
}

type NullableAllowDownloadStatus struct {
	value *AllowDownloadStatus
	isSet bool
}

func (v NullableAllowDownloadStatus) Get() *AllowDownloadStatus {
	return v.value
}

func (v *NullableAllowDownloadStatus) Set(val *AllowDownloadStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableAllowDownloadStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableAllowDownloadStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAllowDownloadStatus(val *AllowDownloadStatus) *NullableAllowDownloadStatus {
	return &NullableAllowDownloadStatus{value: val, isSet: true}
}

func (v NullableAllowDownloadStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAllowDownloadStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


