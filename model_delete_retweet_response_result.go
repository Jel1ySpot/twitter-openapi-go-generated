/*
Twitter OpenAPI

Twitter OpenAPI(Swagger) specification

API version: 0.0.1
Contact: yuki@yuki0311.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DeleteRetweetResponseResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeleteRetweetResponseResult{}

// DeleteRetweetResponseResult struct for DeleteRetweetResponseResult
type DeleteRetweetResponseResult struct {
	RetweetResults *DeleteRetweet `json:"retweet_results,omitempty"`
}

// NewDeleteRetweetResponseResult instantiates a new DeleteRetweetResponseResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteRetweetResponseResult() *DeleteRetweetResponseResult {
	this := DeleteRetweetResponseResult{}
	return &this
}

// NewDeleteRetweetResponseResultWithDefaults instantiates a new DeleteRetweetResponseResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteRetweetResponseResultWithDefaults() *DeleteRetweetResponseResult {
	this := DeleteRetweetResponseResult{}
	return &this
}

// GetRetweetResults returns the RetweetResults field value if set, zero value otherwise.
func (o *DeleteRetweetResponseResult) GetRetweetResults() DeleteRetweet {
	if o == nil || IsNil(o.RetweetResults) {
		var ret DeleteRetweet
		return ret
	}
	return *o.RetweetResults
}

// GetRetweetResultsOk returns a tuple with the RetweetResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteRetweetResponseResult) GetRetweetResultsOk() (*DeleteRetweet, bool) {
	if o == nil || IsNil(o.RetweetResults) {
		return nil, false
	}
	return o.RetweetResults, true
}

// HasRetweetResults returns a boolean if a field has been set.
func (o *DeleteRetweetResponseResult) HasRetweetResults() bool {
	if o != nil && !IsNil(o.RetweetResults) {
		return true
	}

	return false
}

// SetRetweetResults gets a reference to the given DeleteRetweet and assigns it to the RetweetResults field.
func (o *DeleteRetweetResponseResult) SetRetweetResults(v DeleteRetweet) {
	o.RetweetResults = &v
}

func (o DeleteRetweetResponseResult) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeleteRetweetResponseResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RetweetResults) {
		toSerialize["retweet_results"] = o.RetweetResults
	}
	return toSerialize, nil
}

type NullableDeleteRetweetResponseResult struct {
	value *DeleteRetweetResponseResult
	isSet bool
}

func (v NullableDeleteRetweetResponseResult) Get() *DeleteRetweetResponseResult {
	return v.value
}

func (v *NullableDeleteRetweetResponseResult) Set(val *DeleteRetweetResponseResult) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteRetweetResponseResult) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteRetweetResponseResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteRetweetResponseResult(val *DeleteRetweetResponseResult) *NullableDeleteRetweetResponseResult {
	return &NullableDeleteRetweetResponseResult{value: val, isSet: true}
}

func (v NullableDeleteRetweetResponseResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteRetweetResponseResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
