/*
Twitter OpenAPI

Twitter OpenAPI(Swagger) specification

API version: 0.0.1
Contact: yuki@yuki0311.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the ArticleMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ArticleMetadata{}

// ArticleMetadata struct for ArticleMetadata
type ArticleMetadata struct {
	FirstPublishedAtSecs int32 `json:"first_published_at_secs"`
}

type _ArticleMetadata ArticleMetadata

// NewArticleMetadata instantiates a new ArticleMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArticleMetadata(firstPublishedAtSecs int32) *ArticleMetadata {
	this := ArticleMetadata{}
	this.FirstPublishedAtSecs = firstPublishedAtSecs
	return &this
}

// NewArticleMetadataWithDefaults instantiates a new ArticleMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewArticleMetadataWithDefaults() *ArticleMetadata {
	this := ArticleMetadata{}
	return &this
}

// GetFirstPublishedAtSecs returns the FirstPublishedAtSecs field value
func (o *ArticleMetadata) GetFirstPublishedAtSecs() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FirstPublishedAtSecs
}

// GetFirstPublishedAtSecsOk returns a tuple with the FirstPublishedAtSecs field value
// and a boolean to check if the value has been set.
func (o *ArticleMetadata) GetFirstPublishedAtSecsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FirstPublishedAtSecs, true
}

// SetFirstPublishedAtSecs sets field value
func (o *ArticleMetadata) SetFirstPublishedAtSecs(v int32) {
	o.FirstPublishedAtSecs = v
}

func (o ArticleMetadata) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ArticleMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["first_published_at_secs"] = o.FirstPublishedAtSecs
	return toSerialize, nil
}

func (o *ArticleMetadata) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"first_published_at_secs",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varArticleMetadata := _ArticleMetadata{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varArticleMetadata)

	if err != nil {
		return err
	}

	*o = ArticleMetadata(varArticleMetadata)

	return err
}

type NullableArticleMetadata struct {
	value *ArticleMetadata
	isSet bool
}

func (v NullableArticleMetadata) Get() *ArticleMetadata {
	return v.value
}

func (v *NullableArticleMetadata) Set(val *ArticleMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableArticleMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableArticleMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArticleMetadata(val *ArticleMetadata) *NullableArticleMetadata {
	return &NullableArticleMetadata{value: val, isSet: true}
}

func (v NullableArticleMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArticleMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
