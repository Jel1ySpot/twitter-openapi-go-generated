/*
Twitter OpenAPI

Twitter OpenAPI(Swagger) specification

API version: 0.0.1
Contact: yuki@yuki0311.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SearchTimeline type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchTimeline{}

// SearchTimeline struct for SearchTimeline
type SearchTimeline struct {
	Timeline Timeline `json:"timeline"`
}

type _SearchTimeline SearchTimeline

// NewSearchTimeline instantiates a new SearchTimeline object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchTimeline(timeline Timeline) *SearchTimeline {
	this := SearchTimeline{}
	this.Timeline = timeline
	return &this
}

// NewSearchTimelineWithDefaults instantiates a new SearchTimeline object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchTimelineWithDefaults() *SearchTimeline {
	this := SearchTimeline{}
	return &this
}

// GetTimeline returns the Timeline field value
func (o *SearchTimeline) GetTimeline() Timeline {
	if o == nil {
		var ret Timeline
		return ret
	}

	return o.Timeline
}

// GetTimelineOk returns a tuple with the Timeline field value
// and a boolean to check if the value has been set.
func (o *SearchTimeline) GetTimelineOk() (*Timeline, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timeline, true
}

// SetTimeline sets field value
func (o *SearchTimeline) SetTimeline(v Timeline) {
	o.Timeline = v
}

func (o SearchTimeline) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchTimeline) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["timeline"] = o.Timeline
	return toSerialize, nil
}

func (o *SearchTimeline) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"timeline",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSearchTimeline := _SearchTimeline{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSearchTimeline)

	if err != nil {
		return err
	}

	*o = SearchTimeline(varSearchTimeline)

	return err
}

type NullableSearchTimeline struct {
	value *SearchTimeline
	isSet bool
}

func (v NullableSearchTimeline) Get() *SearchTimeline {
	return v.value
}

func (v *NullableSearchTimeline) Set(val *SearchTimeline) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchTimeline) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchTimeline) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchTimeline(val *SearchTimeline) *NullableSearchTimeline {
	return &NullableSearchTimeline{value: val, isSet: true}
}

func (v NullableSearchTimeline) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchTimeline) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


