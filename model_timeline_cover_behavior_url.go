/*
Twitter OpenAPI

Twitter OpenAPI(Swagger) specification

API version: 0.0.1
Contact: yuki@yuki0311.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the TimelineCoverBehaviorUrl type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TimelineCoverBehaviorUrl{}

// TimelineCoverBehaviorUrl struct for TimelineCoverBehaviorUrl
type TimelineCoverBehaviorUrl struct {
	Url     string `json:"url"`
	UrlType string `json:"url_type"`
}

type _TimelineCoverBehaviorUrl TimelineCoverBehaviorUrl

// NewTimelineCoverBehaviorUrl instantiates a new TimelineCoverBehaviorUrl object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTimelineCoverBehaviorUrl(url string, urlType string) *TimelineCoverBehaviorUrl {
	this := TimelineCoverBehaviorUrl{}
	this.Url = url
	this.UrlType = urlType
	return &this
}

// NewTimelineCoverBehaviorUrlWithDefaults instantiates a new TimelineCoverBehaviorUrl object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTimelineCoverBehaviorUrlWithDefaults() *TimelineCoverBehaviorUrl {
	this := TimelineCoverBehaviorUrl{}
	return &this
}

// GetUrl returns the Url field value
func (o *TimelineCoverBehaviorUrl) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *TimelineCoverBehaviorUrl) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *TimelineCoverBehaviorUrl) SetUrl(v string) {
	o.Url = v
}

// GetUrlType returns the UrlType field value
func (o *TimelineCoverBehaviorUrl) GetUrlType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UrlType
}

// GetUrlTypeOk returns a tuple with the UrlType field value
// and a boolean to check if the value has been set.
func (o *TimelineCoverBehaviorUrl) GetUrlTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UrlType, true
}

// SetUrlType sets field value
func (o *TimelineCoverBehaviorUrl) SetUrlType(v string) {
	o.UrlType = v
}

func (o TimelineCoverBehaviorUrl) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TimelineCoverBehaviorUrl) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["url"] = o.Url
	toSerialize["url_type"] = o.UrlType
	return toSerialize, nil
}

func (o *TimelineCoverBehaviorUrl) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"url",
		"url_type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTimelineCoverBehaviorUrl := _TimelineCoverBehaviorUrl{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTimelineCoverBehaviorUrl)

	if err != nil {
		return err
	}

	*o = TimelineCoverBehaviorUrl(varTimelineCoverBehaviorUrl)

	return err
}

type NullableTimelineCoverBehaviorUrl struct {
	value *TimelineCoverBehaviorUrl
	isSet bool
}

func (v NullableTimelineCoverBehaviorUrl) Get() *TimelineCoverBehaviorUrl {
	return v.value
}

func (v *NullableTimelineCoverBehaviorUrl) Set(val *TimelineCoverBehaviorUrl) {
	v.value = val
	v.isSet = true
}

func (v NullableTimelineCoverBehaviorUrl) IsSet() bool {
	return v.isSet
}

func (v *NullableTimelineCoverBehaviorUrl) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTimelineCoverBehaviorUrl(val *TimelineCoverBehaviorUrl) *NullableTimelineCoverBehaviorUrl {
	return &NullableTimelineCoverBehaviorUrl{value: val, isSet: true}
}

func (v NullableTimelineCoverBehaviorUrl) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTimelineCoverBehaviorUrl) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
