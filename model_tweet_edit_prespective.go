/*
Twitter OpenAPI

Twitter OpenAPI(Swagger) specification

API version: 0.0.1
Contact: yuki@yuki0311.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TweetEditPrespective type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TweetEditPrespective{}

// TweetEditPrespective struct for TweetEditPrespective
type TweetEditPrespective struct {
	Favorited *bool `json:"favorited,omitempty"`
	Retweeted *bool `json:"retweeted,omitempty"`
}

// NewTweetEditPrespective instantiates a new TweetEditPrespective object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTweetEditPrespective() *TweetEditPrespective {
	this := TweetEditPrespective{}
	return &this
}

// NewTweetEditPrespectiveWithDefaults instantiates a new TweetEditPrespective object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTweetEditPrespectiveWithDefaults() *TweetEditPrespective {
	this := TweetEditPrespective{}
	return &this
}

// GetFavorited returns the Favorited field value if set, zero value otherwise.
func (o *TweetEditPrespective) GetFavorited() bool {
	if o == nil || IsNil(o.Favorited) {
		var ret bool
		return ret
	}
	return *o.Favorited
}

// GetFavoritedOk returns a tuple with the Favorited field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TweetEditPrespective) GetFavoritedOk() (*bool, bool) {
	if o == nil || IsNil(o.Favorited) {
		return nil, false
	}
	return o.Favorited, true
}

// HasFavorited returns a boolean if a field has been set.
func (o *TweetEditPrespective) HasFavorited() bool {
	if o != nil && !IsNil(o.Favorited) {
		return true
	}

	return false
}

// SetFavorited gets a reference to the given bool and assigns it to the Favorited field.
func (o *TweetEditPrespective) SetFavorited(v bool) {
	o.Favorited = &v
}

// GetRetweeted returns the Retweeted field value if set, zero value otherwise.
func (o *TweetEditPrespective) GetRetweeted() bool {
	if o == nil || IsNil(o.Retweeted) {
		var ret bool
		return ret
	}
	return *o.Retweeted
}

// GetRetweetedOk returns a tuple with the Retweeted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TweetEditPrespective) GetRetweetedOk() (*bool, bool) {
	if o == nil || IsNil(o.Retweeted) {
		return nil, false
	}
	return o.Retweeted, true
}

// HasRetweeted returns a boolean if a field has been set.
func (o *TweetEditPrespective) HasRetweeted() bool {
	if o != nil && !IsNil(o.Retweeted) {
		return true
	}

	return false
}

// SetRetweeted gets a reference to the given bool and assigns it to the Retweeted field.
func (o *TweetEditPrespective) SetRetweeted(v bool) {
	o.Retweeted = &v
}

func (o TweetEditPrespective) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TweetEditPrespective) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Favorited) {
		toSerialize["favorited"] = o.Favorited
	}
	if !IsNil(o.Retweeted) {
		toSerialize["retweeted"] = o.Retweeted
	}
	return toSerialize, nil
}

type NullableTweetEditPrespective struct {
	value *TweetEditPrespective
	isSet bool
}

func (v NullableTweetEditPrespective) Get() *TweetEditPrespective {
	return v.value
}

func (v *NullableTweetEditPrespective) Set(val *TweetEditPrespective) {
	v.value = val
	v.isSet = true
}

func (v NullableTweetEditPrespective) IsSet() bool {
	return v.isSet
}

func (v *NullableTweetEditPrespective) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTweetEditPrespective(val *TweetEditPrespective) *NullableTweetEditPrespective {
	return &NullableTweetEditPrespective{value: val, isSet: true}
}

func (v NullableTweetEditPrespective) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTweetEditPrespective) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
