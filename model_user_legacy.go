/*
Twitter OpenAPI

Twitter OpenAPI(Swagger) specification

API version: 0.0.1
Contact: yuki@yuki0311.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UserLegacy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserLegacy{}

// UserLegacy struct for UserLegacy
type UserLegacy struct {
	BlockedBy *bool `json:"blocked_by,omitempty"`
	Blocking *bool `json:"blocking,omitempty"`
	CanDm *bool `json:"can_dm,omitempty"`
	CanMediaTag *bool `json:"can_media_tag,omitempty"`
	CreatedAt string `json:"created_at" validate:"regexp=^(Sun|Mon|Tue|Wed|Thu|Fri|Sat) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (0[1-9]|[12][0-9]|3[01]) (0[0-9]|1[0-9]|2[0-3])(: ?)([0-5][0-9])(: ?)([0-5][0-9]) ([+-][0-9]{4}) ([0-9]{4})$"`
	DefaultProfile bool `json:"default_profile"`
	DefaultProfileImage bool `json:"default_profile_image"`
	Description string `json:"description"`
	Entities map[string]interface{} `json:"entities"`
	FastFollowersCount int32 `json:"fast_followers_count"`
	FavouritesCount int32 `json:"favourites_count"`
	FollowRequestSent *bool `json:"follow_request_sent,omitempty"`
	FollowedBy *bool `json:"followed_by,omitempty"`
	FollowersCount int32 `json:"followers_count"`
	Following *bool `json:"following,omitempty"`
	FriendsCount int32 `json:"friends_count"`
	HasCustomTimelines bool `json:"has_custom_timelines"`
	IsTranslator bool `json:"is_translator"`
	ListedCount int32 `json:"listed_count"`
	Location string `json:"location"`
	MediaCount int32 `json:"media_count"`
	Muting *bool `json:"muting,omitempty"`
	Name string `json:"name"`
	NormalFollowersCount int32 `json:"normal_followers_count"`
	Notifications *bool `json:"notifications,omitempty"`
	PinnedTweetIdsStr []string `json:"pinned_tweet_ids_str"`
	PossiblySensitive bool `json:"possibly_sensitive"`
	ProfileBannerExtensions map[string]interface{} `json:"profile_banner_extensions,omitempty"`
	ProfileBannerUrl *string `json:"profile_banner_url,omitempty"`
	ProfileImageExtensions map[string]interface{} `json:"profile_image_extensions,omitempty"`
	ProfileImageUrlHttps string `json:"profile_image_url_https"`
	ProfileInterstitialType string `json:"profile_interstitial_type"`
	Protected *bool `json:"protected,omitempty"`
	ScreenName string `json:"screen_name"`
	StatusesCount int32 `json:"statuses_count"`
	TranslatorType string `json:"translator_type"`
	Url *string `json:"url,omitempty"`
	Verified bool `json:"verified"`
	VerifiedType *string `json:"verified_type,omitempty"`
	WantRetweets *bool `json:"want_retweets,omitempty"`
	WithheldInCountries []string `json:"withheld_in_countries,omitempty"`
}

type _UserLegacy UserLegacy

// NewUserLegacy instantiates a new UserLegacy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserLegacy(createdAt string, defaultProfile bool, defaultProfileImage bool, description string, entities map[string]interface{}, fastFollowersCount int32, favouritesCount int32, followersCount int32, friendsCount int32, hasCustomTimelines bool, isTranslator bool, listedCount int32, location string, mediaCount int32, name string, normalFollowersCount int32, pinnedTweetIdsStr []string, possiblySensitive bool, profileImageUrlHttps string, profileInterstitialType string, screenName string, statusesCount int32, translatorType string, verified bool) *UserLegacy {
	this := UserLegacy{}
	this.CreatedAt = createdAt
	this.DefaultProfile = defaultProfile
	this.DefaultProfileImage = defaultProfileImage
	this.Description = description
	this.Entities = entities
	this.FastFollowersCount = fastFollowersCount
	this.FavouritesCount = favouritesCount
	this.FollowersCount = followersCount
	this.FriendsCount = friendsCount
	this.HasCustomTimelines = hasCustomTimelines
	this.IsTranslator = isTranslator
	this.ListedCount = listedCount
	this.Location = location
	this.MediaCount = mediaCount
	this.Name = name
	this.NormalFollowersCount = normalFollowersCount
	this.PinnedTweetIdsStr = pinnedTweetIdsStr
	this.PossiblySensitive = possiblySensitive
	this.ProfileImageUrlHttps = profileImageUrlHttps
	this.ProfileInterstitialType = profileInterstitialType
	this.ScreenName = screenName
	this.StatusesCount = statusesCount
	this.TranslatorType = translatorType
	this.Verified = verified
	return &this
}

// NewUserLegacyWithDefaults instantiates a new UserLegacy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserLegacyWithDefaults() *UserLegacy {
	this := UserLegacy{}
	return &this
}

// GetBlockedBy returns the BlockedBy field value if set, zero value otherwise.
func (o *UserLegacy) GetBlockedBy() bool {
	if o == nil || IsNil(o.BlockedBy) {
		var ret bool
		return ret
	}
	return *o.BlockedBy
}

// GetBlockedByOk returns a tuple with the BlockedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserLegacy) GetBlockedByOk() (*bool, bool) {
	if o == nil || IsNil(o.BlockedBy) {
		return nil, false
	}
	return o.BlockedBy, true
}

// HasBlockedBy returns a boolean if a field has been set.
func (o *UserLegacy) HasBlockedBy() bool {
	if o != nil && !IsNil(o.BlockedBy) {
		return true
	}

	return false
}

// SetBlockedBy gets a reference to the given bool and assigns it to the BlockedBy field.
func (o *UserLegacy) SetBlockedBy(v bool) {
	o.BlockedBy = &v
}

// GetBlocking returns the Blocking field value if set, zero value otherwise.
func (o *UserLegacy) GetBlocking() bool {
	if o == nil || IsNil(o.Blocking) {
		var ret bool
		return ret
	}
	return *o.Blocking
}

// GetBlockingOk returns a tuple with the Blocking field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserLegacy) GetBlockingOk() (*bool, bool) {
	if o == nil || IsNil(o.Blocking) {
		return nil, false
	}
	return o.Blocking, true
}

// HasBlocking returns a boolean if a field has been set.
func (o *UserLegacy) HasBlocking() bool {
	if o != nil && !IsNil(o.Blocking) {
		return true
	}

	return false
}

// SetBlocking gets a reference to the given bool and assigns it to the Blocking field.
func (o *UserLegacy) SetBlocking(v bool) {
	o.Blocking = &v
}

// GetCanDm returns the CanDm field value if set, zero value otherwise.
func (o *UserLegacy) GetCanDm() bool {
	if o == nil || IsNil(o.CanDm) {
		var ret bool
		return ret
	}
	return *o.CanDm
}

// GetCanDmOk returns a tuple with the CanDm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserLegacy) GetCanDmOk() (*bool, bool) {
	if o == nil || IsNil(o.CanDm) {
		return nil, false
	}
	return o.CanDm, true
}

// HasCanDm returns a boolean if a field has been set.
func (o *UserLegacy) HasCanDm() bool {
	if o != nil && !IsNil(o.CanDm) {
		return true
	}

	return false
}

// SetCanDm gets a reference to the given bool and assigns it to the CanDm field.
func (o *UserLegacy) SetCanDm(v bool) {
	o.CanDm = &v
}

// GetCanMediaTag returns the CanMediaTag field value if set, zero value otherwise.
func (o *UserLegacy) GetCanMediaTag() bool {
	if o == nil || IsNil(o.CanMediaTag) {
		var ret bool
		return ret
	}
	return *o.CanMediaTag
}

// GetCanMediaTagOk returns a tuple with the CanMediaTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserLegacy) GetCanMediaTagOk() (*bool, bool) {
	if o == nil || IsNil(o.CanMediaTag) {
		return nil, false
	}
	return o.CanMediaTag, true
}

// HasCanMediaTag returns a boolean if a field has been set.
func (o *UserLegacy) HasCanMediaTag() bool {
	if o != nil && !IsNil(o.CanMediaTag) {
		return true
	}

	return false
}

// SetCanMediaTag gets a reference to the given bool and assigns it to the CanMediaTag field.
func (o *UserLegacy) SetCanMediaTag(v bool) {
	o.CanMediaTag = &v
}

// GetCreatedAt returns the CreatedAt field value
func (o *UserLegacy) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *UserLegacy) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *UserLegacy) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetDefaultProfile returns the DefaultProfile field value
func (o *UserLegacy) GetDefaultProfile() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.DefaultProfile
}

// GetDefaultProfileOk returns a tuple with the DefaultProfile field value
// and a boolean to check if the value has been set.
func (o *UserLegacy) GetDefaultProfileOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DefaultProfile, true
}

// SetDefaultProfile sets field value
func (o *UserLegacy) SetDefaultProfile(v bool) {
	o.DefaultProfile = v
}

// GetDefaultProfileImage returns the DefaultProfileImage field value
func (o *UserLegacy) GetDefaultProfileImage() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.DefaultProfileImage
}

// GetDefaultProfileImageOk returns a tuple with the DefaultProfileImage field value
// and a boolean to check if the value has been set.
func (o *UserLegacy) GetDefaultProfileImageOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DefaultProfileImage, true
}

// SetDefaultProfileImage sets field value
func (o *UserLegacy) SetDefaultProfileImage(v bool) {
	o.DefaultProfileImage = v
}

// GetDescription returns the Description field value
func (o *UserLegacy) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *UserLegacy) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *UserLegacy) SetDescription(v string) {
	o.Description = v
}

// GetEntities returns the Entities field value
func (o *UserLegacy) GetEntities() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Entities
}

// GetEntitiesOk returns a tuple with the Entities field value
// and a boolean to check if the value has been set.
func (o *UserLegacy) GetEntitiesOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Entities, true
}

// SetEntities sets field value
func (o *UserLegacy) SetEntities(v map[string]interface{}) {
	o.Entities = v
}

// GetFastFollowersCount returns the FastFollowersCount field value
func (o *UserLegacy) GetFastFollowersCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FastFollowersCount
}

// GetFastFollowersCountOk returns a tuple with the FastFollowersCount field value
// and a boolean to check if the value has been set.
func (o *UserLegacy) GetFastFollowersCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FastFollowersCount, true
}

// SetFastFollowersCount sets field value
func (o *UserLegacy) SetFastFollowersCount(v int32) {
	o.FastFollowersCount = v
}

// GetFavouritesCount returns the FavouritesCount field value
func (o *UserLegacy) GetFavouritesCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FavouritesCount
}

// GetFavouritesCountOk returns a tuple with the FavouritesCount field value
// and a boolean to check if the value has been set.
func (o *UserLegacy) GetFavouritesCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FavouritesCount, true
}

// SetFavouritesCount sets field value
func (o *UserLegacy) SetFavouritesCount(v int32) {
	o.FavouritesCount = v
}

// GetFollowRequestSent returns the FollowRequestSent field value if set, zero value otherwise.
func (o *UserLegacy) GetFollowRequestSent() bool {
	if o == nil || IsNil(o.FollowRequestSent) {
		var ret bool
		return ret
	}
	return *o.FollowRequestSent
}

// GetFollowRequestSentOk returns a tuple with the FollowRequestSent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserLegacy) GetFollowRequestSentOk() (*bool, bool) {
	if o == nil || IsNil(o.FollowRequestSent) {
		return nil, false
	}
	return o.FollowRequestSent, true
}

// HasFollowRequestSent returns a boolean if a field has been set.
func (o *UserLegacy) HasFollowRequestSent() bool {
	if o != nil && !IsNil(o.FollowRequestSent) {
		return true
	}

	return false
}

// SetFollowRequestSent gets a reference to the given bool and assigns it to the FollowRequestSent field.
func (o *UserLegacy) SetFollowRequestSent(v bool) {
	o.FollowRequestSent = &v
}

// GetFollowedBy returns the FollowedBy field value if set, zero value otherwise.
func (o *UserLegacy) GetFollowedBy() bool {
	if o == nil || IsNil(o.FollowedBy) {
		var ret bool
		return ret
	}
	return *o.FollowedBy
}

// GetFollowedByOk returns a tuple with the FollowedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserLegacy) GetFollowedByOk() (*bool, bool) {
	if o == nil || IsNil(o.FollowedBy) {
		return nil, false
	}
	return o.FollowedBy, true
}

// HasFollowedBy returns a boolean if a field has been set.
func (o *UserLegacy) HasFollowedBy() bool {
	if o != nil && !IsNil(o.FollowedBy) {
		return true
	}

	return false
}

// SetFollowedBy gets a reference to the given bool and assigns it to the FollowedBy field.
func (o *UserLegacy) SetFollowedBy(v bool) {
	o.FollowedBy = &v
}

// GetFollowersCount returns the FollowersCount field value
func (o *UserLegacy) GetFollowersCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FollowersCount
}

// GetFollowersCountOk returns a tuple with the FollowersCount field value
// and a boolean to check if the value has been set.
func (o *UserLegacy) GetFollowersCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FollowersCount, true
}

// SetFollowersCount sets field value
func (o *UserLegacy) SetFollowersCount(v int32) {
	o.FollowersCount = v
}

// GetFollowing returns the Following field value if set, zero value otherwise.
func (o *UserLegacy) GetFollowing() bool {
	if o == nil || IsNil(o.Following) {
		var ret bool
		return ret
	}
	return *o.Following
}

// GetFollowingOk returns a tuple with the Following field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserLegacy) GetFollowingOk() (*bool, bool) {
	if o == nil || IsNil(o.Following) {
		return nil, false
	}
	return o.Following, true
}

// HasFollowing returns a boolean if a field has been set.
func (o *UserLegacy) HasFollowing() bool {
	if o != nil && !IsNil(o.Following) {
		return true
	}

	return false
}

// SetFollowing gets a reference to the given bool and assigns it to the Following field.
func (o *UserLegacy) SetFollowing(v bool) {
	o.Following = &v
}

// GetFriendsCount returns the FriendsCount field value
func (o *UserLegacy) GetFriendsCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FriendsCount
}

// GetFriendsCountOk returns a tuple with the FriendsCount field value
// and a boolean to check if the value has been set.
func (o *UserLegacy) GetFriendsCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FriendsCount, true
}

// SetFriendsCount sets field value
func (o *UserLegacy) SetFriendsCount(v int32) {
	o.FriendsCount = v
}

// GetHasCustomTimelines returns the HasCustomTimelines field value
func (o *UserLegacy) GetHasCustomTimelines() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasCustomTimelines
}

// GetHasCustomTimelinesOk returns a tuple with the HasCustomTimelines field value
// and a boolean to check if the value has been set.
func (o *UserLegacy) GetHasCustomTimelinesOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasCustomTimelines, true
}

// SetHasCustomTimelines sets field value
func (o *UserLegacy) SetHasCustomTimelines(v bool) {
	o.HasCustomTimelines = v
}

// GetIsTranslator returns the IsTranslator field value
func (o *UserLegacy) GetIsTranslator() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsTranslator
}

// GetIsTranslatorOk returns a tuple with the IsTranslator field value
// and a boolean to check if the value has been set.
func (o *UserLegacy) GetIsTranslatorOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsTranslator, true
}

// SetIsTranslator sets field value
func (o *UserLegacy) SetIsTranslator(v bool) {
	o.IsTranslator = v
}

// GetListedCount returns the ListedCount field value
func (o *UserLegacy) GetListedCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ListedCount
}

// GetListedCountOk returns a tuple with the ListedCount field value
// and a boolean to check if the value has been set.
func (o *UserLegacy) GetListedCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ListedCount, true
}

// SetListedCount sets field value
func (o *UserLegacy) SetListedCount(v int32) {
	o.ListedCount = v
}

// GetLocation returns the Location field value
func (o *UserLegacy) GetLocation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Location
}

// GetLocationOk returns a tuple with the Location field value
// and a boolean to check if the value has been set.
func (o *UserLegacy) GetLocationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Location, true
}

// SetLocation sets field value
func (o *UserLegacy) SetLocation(v string) {
	o.Location = v
}

// GetMediaCount returns the MediaCount field value
func (o *UserLegacy) GetMediaCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MediaCount
}

// GetMediaCountOk returns a tuple with the MediaCount field value
// and a boolean to check if the value has been set.
func (o *UserLegacy) GetMediaCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MediaCount, true
}

// SetMediaCount sets field value
func (o *UserLegacy) SetMediaCount(v int32) {
	o.MediaCount = v
}

// GetMuting returns the Muting field value if set, zero value otherwise.
func (o *UserLegacy) GetMuting() bool {
	if o == nil || IsNil(o.Muting) {
		var ret bool
		return ret
	}
	return *o.Muting
}

// GetMutingOk returns a tuple with the Muting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserLegacy) GetMutingOk() (*bool, bool) {
	if o == nil || IsNil(o.Muting) {
		return nil, false
	}
	return o.Muting, true
}

// HasMuting returns a boolean if a field has been set.
func (o *UserLegacy) HasMuting() bool {
	if o != nil && !IsNil(o.Muting) {
		return true
	}

	return false
}

// SetMuting gets a reference to the given bool and assigns it to the Muting field.
func (o *UserLegacy) SetMuting(v bool) {
	o.Muting = &v
}

// GetName returns the Name field value
func (o *UserLegacy) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *UserLegacy) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *UserLegacy) SetName(v string) {
	o.Name = v
}

// GetNormalFollowersCount returns the NormalFollowersCount field value
func (o *UserLegacy) GetNormalFollowersCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NormalFollowersCount
}

// GetNormalFollowersCountOk returns a tuple with the NormalFollowersCount field value
// and a boolean to check if the value has been set.
func (o *UserLegacy) GetNormalFollowersCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NormalFollowersCount, true
}

// SetNormalFollowersCount sets field value
func (o *UserLegacy) SetNormalFollowersCount(v int32) {
	o.NormalFollowersCount = v
}

// GetNotifications returns the Notifications field value if set, zero value otherwise.
func (o *UserLegacy) GetNotifications() bool {
	if o == nil || IsNil(o.Notifications) {
		var ret bool
		return ret
	}
	return *o.Notifications
}

// GetNotificationsOk returns a tuple with the Notifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserLegacy) GetNotificationsOk() (*bool, bool) {
	if o == nil || IsNil(o.Notifications) {
		return nil, false
	}
	return o.Notifications, true
}

// HasNotifications returns a boolean if a field has been set.
func (o *UserLegacy) HasNotifications() bool {
	if o != nil && !IsNil(o.Notifications) {
		return true
	}

	return false
}

// SetNotifications gets a reference to the given bool and assigns it to the Notifications field.
func (o *UserLegacy) SetNotifications(v bool) {
	o.Notifications = &v
}

// GetPinnedTweetIdsStr returns the PinnedTweetIdsStr field value
func (o *UserLegacy) GetPinnedTweetIdsStr() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.PinnedTweetIdsStr
}

// GetPinnedTweetIdsStrOk returns a tuple with the PinnedTweetIdsStr field value
// and a boolean to check if the value has been set.
func (o *UserLegacy) GetPinnedTweetIdsStrOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PinnedTweetIdsStr, true
}

// SetPinnedTweetIdsStr sets field value
func (o *UserLegacy) SetPinnedTweetIdsStr(v []string) {
	o.PinnedTweetIdsStr = v
}

// GetPossiblySensitive returns the PossiblySensitive field value
func (o *UserLegacy) GetPossiblySensitive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.PossiblySensitive
}

// GetPossiblySensitiveOk returns a tuple with the PossiblySensitive field value
// and a boolean to check if the value has been set.
func (o *UserLegacy) GetPossiblySensitiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PossiblySensitive, true
}

// SetPossiblySensitive sets field value
func (o *UserLegacy) SetPossiblySensitive(v bool) {
	o.PossiblySensitive = v
}

// GetProfileBannerExtensions returns the ProfileBannerExtensions field value if set, zero value otherwise.
func (o *UserLegacy) GetProfileBannerExtensions() map[string]interface{} {
	if o == nil || IsNil(o.ProfileBannerExtensions) {
		var ret map[string]interface{}
		return ret
	}
	return o.ProfileBannerExtensions
}

// GetProfileBannerExtensionsOk returns a tuple with the ProfileBannerExtensions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserLegacy) GetProfileBannerExtensionsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ProfileBannerExtensions) {
		return map[string]interface{}{}, false
	}
	return o.ProfileBannerExtensions, true
}

// HasProfileBannerExtensions returns a boolean if a field has been set.
func (o *UserLegacy) HasProfileBannerExtensions() bool {
	if o != nil && !IsNil(o.ProfileBannerExtensions) {
		return true
	}

	return false
}

// SetProfileBannerExtensions gets a reference to the given map[string]interface{} and assigns it to the ProfileBannerExtensions field.
func (o *UserLegacy) SetProfileBannerExtensions(v map[string]interface{}) {
	o.ProfileBannerExtensions = v
}

// GetProfileBannerUrl returns the ProfileBannerUrl field value if set, zero value otherwise.
func (o *UserLegacy) GetProfileBannerUrl() string {
	if o == nil || IsNil(o.ProfileBannerUrl) {
		var ret string
		return ret
	}
	return *o.ProfileBannerUrl
}

// GetProfileBannerUrlOk returns a tuple with the ProfileBannerUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserLegacy) GetProfileBannerUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ProfileBannerUrl) {
		return nil, false
	}
	return o.ProfileBannerUrl, true
}

// HasProfileBannerUrl returns a boolean if a field has been set.
func (o *UserLegacy) HasProfileBannerUrl() bool {
	if o != nil && !IsNil(o.ProfileBannerUrl) {
		return true
	}

	return false
}

// SetProfileBannerUrl gets a reference to the given string and assigns it to the ProfileBannerUrl field.
func (o *UserLegacy) SetProfileBannerUrl(v string) {
	o.ProfileBannerUrl = &v
}

// GetProfileImageExtensions returns the ProfileImageExtensions field value if set, zero value otherwise.
func (o *UserLegacy) GetProfileImageExtensions() map[string]interface{} {
	if o == nil || IsNil(o.ProfileImageExtensions) {
		var ret map[string]interface{}
		return ret
	}
	return o.ProfileImageExtensions
}

// GetProfileImageExtensionsOk returns a tuple with the ProfileImageExtensions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserLegacy) GetProfileImageExtensionsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ProfileImageExtensions) {
		return map[string]interface{}{}, false
	}
	return o.ProfileImageExtensions, true
}

// HasProfileImageExtensions returns a boolean if a field has been set.
func (o *UserLegacy) HasProfileImageExtensions() bool {
	if o != nil && !IsNil(o.ProfileImageExtensions) {
		return true
	}

	return false
}

// SetProfileImageExtensions gets a reference to the given map[string]interface{} and assigns it to the ProfileImageExtensions field.
func (o *UserLegacy) SetProfileImageExtensions(v map[string]interface{}) {
	o.ProfileImageExtensions = v
}

// GetProfileImageUrlHttps returns the ProfileImageUrlHttps field value
func (o *UserLegacy) GetProfileImageUrlHttps() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProfileImageUrlHttps
}

// GetProfileImageUrlHttpsOk returns a tuple with the ProfileImageUrlHttps field value
// and a boolean to check if the value has been set.
func (o *UserLegacy) GetProfileImageUrlHttpsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProfileImageUrlHttps, true
}

// SetProfileImageUrlHttps sets field value
func (o *UserLegacy) SetProfileImageUrlHttps(v string) {
	o.ProfileImageUrlHttps = v
}

// GetProfileInterstitialType returns the ProfileInterstitialType field value
func (o *UserLegacy) GetProfileInterstitialType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProfileInterstitialType
}

// GetProfileInterstitialTypeOk returns a tuple with the ProfileInterstitialType field value
// and a boolean to check if the value has been set.
func (o *UserLegacy) GetProfileInterstitialTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProfileInterstitialType, true
}

// SetProfileInterstitialType sets field value
func (o *UserLegacy) SetProfileInterstitialType(v string) {
	o.ProfileInterstitialType = v
}

// GetProtected returns the Protected field value if set, zero value otherwise.
func (o *UserLegacy) GetProtected() bool {
	if o == nil || IsNil(o.Protected) {
		var ret bool
		return ret
	}
	return *o.Protected
}

// GetProtectedOk returns a tuple with the Protected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserLegacy) GetProtectedOk() (*bool, bool) {
	if o == nil || IsNil(o.Protected) {
		return nil, false
	}
	return o.Protected, true
}

// HasProtected returns a boolean if a field has been set.
func (o *UserLegacy) HasProtected() bool {
	if o != nil && !IsNil(o.Protected) {
		return true
	}

	return false
}

// SetProtected gets a reference to the given bool and assigns it to the Protected field.
func (o *UserLegacy) SetProtected(v bool) {
	o.Protected = &v
}

// GetScreenName returns the ScreenName field value
func (o *UserLegacy) GetScreenName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ScreenName
}

// GetScreenNameOk returns a tuple with the ScreenName field value
// and a boolean to check if the value has been set.
func (o *UserLegacy) GetScreenNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ScreenName, true
}

// SetScreenName sets field value
func (o *UserLegacy) SetScreenName(v string) {
	o.ScreenName = v
}

// GetStatusesCount returns the StatusesCount field value
func (o *UserLegacy) GetStatusesCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.StatusesCount
}

// GetStatusesCountOk returns a tuple with the StatusesCount field value
// and a boolean to check if the value has been set.
func (o *UserLegacy) GetStatusesCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StatusesCount, true
}

// SetStatusesCount sets field value
func (o *UserLegacy) SetStatusesCount(v int32) {
	o.StatusesCount = v
}

// GetTranslatorType returns the TranslatorType field value
func (o *UserLegacy) GetTranslatorType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TranslatorType
}

// GetTranslatorTypeOk returns a tuple with the TranslatorType field value
// and a boolean to check if the value has been set.
func (o *UserLegacy) GetTranslatorTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TranslatorType, true
}

// SetTranslatorType sets field value
func (o *UserLegacy) SetTranslatorType(v string) {
	o.TranslatorType = v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *UserLegacy) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserLegacy) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *UserLegacy) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *UserLegacy) SetUrl(v string) {
	o.Url = &v
}

// GetVerified returns the Verified field value
func (o *UserLegacy) GetVerified() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Verified
}

// GetVerifiedOk returns a tuple with the Verified field value
// and a boolean to check if the value has been set.
func (o *UserLegacy) GetVerifiedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Verified, true
}

// SetVerified sets field value
func (o *UserLegacy) SetVerified(v bool) {
	o.Verified = v
}

// GetVerifiedType returns the VerifiedType field value if set, zero value otherwise.
func (o *UserLegacy) GetVerifiedType() string {
	if o == nil || IsNil(o.VerifiedType) {
		var ret string
		return ret
	}
	return *o.VerifiedType
}

// GetVerifiedTypeOk returns a tuple with the VerifiedType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserLegacy) GetVerifiedTypeOk() (*string, bool) {
	if o == nil || IsNil(o.VerifiedType) {
		return nil, false
	}
	return o.VerifiedType, true
}

// HasVerifiedType returns a boolean if a field has been set.
func (o *UserLegacy) HasVerifiedType() bool {
	if o != nil && !IsNil(o.VerifiedType) {
		return true
	}

	return false
}

// SetVerifiedType gets a reference to the given string and assigns it to the VerifiedType field.
func (o *UserLegacy) SetVerifiedType(v string) {
	o.VerifiedType = &v
}

// GetWantRetweets returns the WantRetweets field value if set, zero value otherwise.
func (o *UserLegacy) GetWantRetweets() bool {
	if o == nil || IsNil(o.WantRetweets) {
		var ret bool
		return ret
	}
	return *o.WantRetweets
}

// GetWantRetweetsOk returns a tuple with the WantRetweets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserLegacy) GetWantRetweetsOk() (*bool, bool) {
	if o == nil || IsNil(o.WantRetweets) {
		return nil, false
	}
	return o.WantRetweets, true
}

// HasWantRetweets returns a boolean if a field has been set.
func (o *UserLegacy) HasWantRetweets() bool {
	if o != nil && !IsNil(o.WantRetweets) {
		return true
	}

	return false
}

// SetWantRetweets gets a reference to the given bool and assigns it to the WantRetweets field.
func (o *UserLegacy) SetWantRetweets(v bool) {
	o.WantRetweets = &v
}

// GetWithheldInCountries returns the WithheldInCountries field value if set, zero value otherwise.
func (o *UserLegacy) GetWithheldInCountries() []string {
	if o == nil || IsNil(o.WithheldInCountries) {
		var ret []string
		return ret
	}
	return o.WithheldInCountries
}

// GetWithheldInCountriesOk returns a tuple with the WithheldInCountries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserLegacy) GetWithheldInCountriesOk() ([]string, bool) {
	if o == nil || IsNil(o.WithheldInCountries) {
		return nil, false
	}
	return o.WithheldInCountries, true
}

// HasWithheldInCountries returns a boolean if a field has been set.
func (o *UserLegacy) HasWithheldInCountries() bool {
	if o != nil && !IsNil(o.WithheldInCountries) {
		return true
	}

	return false
}

// SetWithheldInCountries gets a reference to the given []string and assigns it to the WithheldInCountries field.
func (o *UserLegacy) SetWithheldInCountries(v []string) {
	o.WithheldInCountries = v
}

func (o UserLegacy) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserLegacy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BlockedBy) {
		toSerialize["blocked_by"] = o.BlockedBy
	}
	if !IsNil(o.Blocking) {
		toSerialize["blocking"] = o.Blocking
	}
	if !IsNil(o.CanDm) {
		toSerialize["can_dm"] = o.CanDm
	}
	if !IsNil(o.CanMediaTag) {
		toSerialize["can_media_tag"] = o.CanMediaTag
	}
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["default_profile"] = o.DefaultProfile
	toSerialize["default_profile_image"] = o.DefaultProfileImage
	toSerialize["description"] = o.Description
	toSerialize["entities"] = o.Entities
	toSerialize["fast_followers_count"] = o.FastFollowersCount
	toSerialize["favourites_count"] = o.FavouritesCount
	if !IsNil(o.FollowRequestSent) {
		toSerialize["follow_request_sent"] = o.FollowRequestSent
	}
	if !IsNil(o.FollowedBy) {
		toSerialize["followed_by"] = o.FollowedBy
	}
	toSerialize["followers_count"] = o.FollowersCount
	if !IsNil(o.Following) {
		toSerialize["following"] = o.Following
	}
	toSerialize["friends_count"] = o.FriendsCount
	toSerialize["has_custom_timelines"] = o.HasCustomTimelines
	toSerialize["is_translator"] = o.IsTranslator
	toSerialize["listed_count"] = o.ListedCount
	toSerialize["location"] = o.Location
	toSerialize["media_count"] = o.MediaCount
	if !IsNil(o.Muting) {
		toSerialize["muting"] = o.Muting
	}
	toSerialize["name"] = o.Name
	toSerialize["normal_followers_count"] = o.NormalFollowersCount
	if !IsNil(o.Notifications) {
		toSerialize["notifications"] = o.Notifications
	}
	toSerialize["pinned_tweet_ids_str"] = o.PinnedTweetIdsStr
	toSerialize["possibly_sensitive"] = o.PossiblySensitive
	if !IsNil(o.ProfileBannerExtensions) {
		toSerialize["profile_banner_extensions"] = o.ProfileBannerExtensions
	}
	if !IsNil(o.ProfileBannerUrl) {
		toSerialize["profile_banner_url"] = o.ProfileBannerUrl
	}
	if !IsNil(o.ProfileImageExtensions) {
		toSerialize["profile_image_extensions"] = o.ProfileImageExtensions
	}
	toSerialize["profile_image_url_https"] = o.ProfileImageUrlHttps
	toSerialize["profile_interstitial_type"] = o.ProfileInterstitialType
	if !IsNil(o.Protected) {
		toSerialize["protected"] = o.Protected
	}
	toSerialize["screen_name"] = o.ScreenName
	toSerialize["statuses_count"] = o.StatusesCount
	toSerialize["translator_type"] = o.TranslatorType
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	toSerialize["verified"] = o.Verified
	if !IsNil(o.VerifiedType) {
		toSerialize["verified_type"] = o.VerifiedType
	}
	if !IsNil(o.WantRetweets) {
		toSerialize["want_retweets"] = o.WantRetweets
	}
	if !IsNil(o.WithheldInCountries) {
		toSerialize["withheld_in_countries"] = o.WithheldInCountries
	}
	return toSerialize, nil
}

func (o *UserLegacy) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"created_at",
		"default_profile",
		"default_profile_image",
		"description",
		"entities",
		"fast_followers_count",
		"favourites_count",
		"followers_count",
		"friends_count",
		"has_custom_timelines",
		"is_translator",
		"listed_count",
		"location",
		"media_count",
		"name",
		"normal_followers_count",
		"pinned_tweet_ids_str",
		"possibly_sensitive",
		"profile_image_url_https",
		"profile_interstitial_type",
		"screen_name",
		"statuses_count",
		"translator_type",
		"verified",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUserLegacy := _UserLegacy{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUserLegacy)

	if err != nil {
		return err
	}

	*o = UserLegacy(varUserLegacy)

	return err
}

type NullableUserLegacy struct {
	value *UserLegacy
	isSet bool
}

func (v NullableUserLegacy) Get() *UserLegacy {
	return v.value
}

func (v *NullableUserLegacy) Set(val *UserLegacy) {
	v.value = val
	v.isSet = true
}

func (v NullableUserLegacy) IsSet() bool {
	return v.isSet
}

func (v *NullableUserLegacy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserLegacy(val *UserLegacy) *NullableUserLegacy {
	return &NullableUserLegacy{value: val, isSet: true}
}

func (v NullableUserLegacy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserLegacy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


