/*
Twitter OpenAPI

Twitter OpenAPI(Swagger) specification

API version: 0.0.1
Contact: yuki@yuki0311.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the TimelineAddToModule type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TimelineAddToModule{}

// TimelineAddToModule struct for TimelineAddToModule
type TimelineAddToModule struct {
	ModuleEntryId string          `json:"moduleEntryId"`
	ModuleItems   []ModuleItem    `json:"moduleItems"`
	Prepend       *bool           `json:"prepend,omitempty"`
	Type          InstructionType `json:"type"`
}

type _TimelineAddToModule TimelineAddToModule

// NewTimelineAddToModule instantiates a new TimelineAddToModule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTimelineAddToModule(moduleEntryId string, moduleItems []ModuleItem, type_ InstructionType) *TimelineAddToModule {
	this := TimelineAddToModule{}
	this.ModuleEntryId = moduleEntryId
	this.ModuleItems = moduleItems
	this.Type = type_
	return &this
}

// NewTimelineAddToModuleWithDefaults instantiates a new TimelineAddToModule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTimelineAddToModuleWithDefaults() *TimelineAddToModule {
	this := TimelineAddToModule{}
	return &this
}

// GetModuleEntryId returns the ModuleEntryId field value
func (o *TimelineAddToModule) GetModuleEntryId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ModuleEntryId
}

// GetModuleEntryIdOk returns a tuple with the ModuleEntryId field value
// and a boolean to check if the value has been set.
func (o *TimelineAddToModule) GetModuleEntryIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModuleEntryId, true
}

// SetModuleEntryId sets field value
func (o *TimelineAddToModule) SetModuleEntryId(v string) {
	o.ModuleEntryId = v
}

// GetModuleItems returns the ModuleItems field value
func (o *TimelineAddToModule) GetModuleItems() []ModuleItem {
	if o == nil {
		var ret []ModuleItem
		return ret
	}

	return o.ModuleItems
}

// GetModuleItemsOk returns a tuple with the ModuleItems field value
// and a boolean to check if the value has been set.
func (o *TimelineAddToModule) GetModuleItemsOk() ([]ModuleItem, bool) {
	if o == nil {
		return nil, false
	}
	return o.ModuleItems, true
}

// SetModuleItems sets field value
func (o *TimelineAddToModule) SetModuleItems(v []ModuleItem) {
	o.ModuleItems = v
}

// GetPrepend returns the Prepend field value if set, zero value otherwise.
func (o *TimelineAddToModule) GetPrepend() bool {
	if o == nil || IsNil(o.Prepend) {
		var ret bool
		return ret
	}
	return *o.Prepend
}

// GetPrependOk returns a tuple with the Prepend field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimelineAddToModule) GetPrependOk() (*bool, bool) {
	if o == nil || IsNil(o.Prepend) {
		return nil, false
	}
	return o.Prepend, true
}

// HasPrepend returns a boolean if a field has been set.
func (o *TimelineAddToModule) HasPrepend() bool {
	if o != nil && !IsNil(o.Prepend) {
		return true
	}

	return false
}

// SetPrepend gets a reference to the given bool and assigns it to the Prepend field.
func (o *TimelineAddToModule) SetPrepend(v bool) {
	o.Prepend = &v
}

// GetType returns the Type field value
func (o *TimelineAddToModule) GetType() InstructionType {
	if o == nil {
		var ret InstructionType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *TimelineAddToModule) GetTypeOk() (*InstructionType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *TimelineAddToModule) SetType(v InstructionType) {
	o.Type = v
}

func (o TimelineAddToModule) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TimelineAddToModule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["moduleEntryId"] = o.ModuleEntryId
	toSerialize["moduleItems"] = o.ModuleItems
	if !IsNil(o.Prepend) {
		toSerialize["prepend"] = o.Prepend
	}
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

func (o *TimelineAddToModule) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"moduleEntryId",
		"moduleItems",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTimelineAddToModule := _TimelineAddToModule{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTimelineAddToModule)

	if err != nil {
		return err
	}

	*o = TimelineAddToModule(varTimelineAddToModule)

	return err
}

type NullableTimelineAddToModule struct {
	value *TimelineAddToModule
	isSet bool
}

func (v NullableTimelineAddToModule) Get() *TimelineAddToModule {
	return v.value
}

func (v *NullableTimelineAddToModule) Set(val *TimelineAddToModule) {
	v.value = val
	v.isSet = true
}

func (v NullableTimelineAddToModule) IsSet() bool {
	return v.isSet
}

func (v *NullableTimelineAddToModule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTimelineAddToModule(val *TimelineAddToModule) *NullableTimelineAddToModule {
	return &NullableTimelineAddToModule{value: val, isSet: true}
}

func (v NullableTimelineAddToModule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTimelineAddToModule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
