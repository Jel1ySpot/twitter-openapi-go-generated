/*
Twitter OpenAPI

Twitter OpenAPI(Swagger) specification

API version: 0.0.1
Contact: yuki@yuki0311.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PostDeleteRetweetRequestVariables type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostDeleteRetweetRequestVariables{}

// PostDeleteRetweetRequestVariables struct for PostDeleteRetweetRequestVariables
type PostDeleteRetweetRequestVariables struct {
	DarkRequest bool `json:"dark_request"`
	SourceTweetId string `json:"source_tweet_id"`
}

type _PostDeleteRetweetRequestVariables PostDeleteRetweetRequestVariables

// NewPostDeleteRetweetRequestVariables instantiates a new PostDeleteRetweetRequestVariables object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostDeleteRetweetRequestVariables(darkRequest bool, sourceTweetId string) *PostDeleteRetweetRequestVariables {
	this := PostDeleteRetweetRequestVariables{}
	this.DarkRequest = darkRequest
	this.SourceTweetId = sourceTweetId
	return &this
}

// NewPostDeleteRetweetRequestVariablesWithDefaults instantiates a new PostDeleteRetweetRequestVariables object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostDeleteRetweetRequestVariablesWithDefaults() *PostDeleteRetweetRequestVariables {
	this := PostDeleteRetweetRequestVariables{}
	var darkRequest bool = false
	this.DarkRequest = darkRequest
	var sourceTweetId string = "1349129669258448897"
	this.SourceTweetId = sourceTweetId
	return &this
}

// GetDarkRequest returns the DarkRequest field value
func (o *PostDeleteRetweetRequestVariables) GetDarkRequest() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.DarkRequest
}

// GetDarkRequestOk returns a tuple with the DarkRequest field value
// and a boolean to check if the value has been set.
func (o *PostDeleteRetweetRequestVariables) GetDarkRequestOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DarkRequest, true
}

// SetDarkRequest sets field value
func (o *PostDeleteRetweetRequestVariables) SetDarkRequest(v bool) {
	o.DarkRequest = v
}

// GetSourceTweetId returns the SourceTweetId field value
func (o *PostDeleteRetweetRequestVariables) GetSourceTweetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SourceTweetId
}

// GetSourceTweetIdOk returns a tuple with the SourceTweetId field value
// and a boolean to check if the value has been set.
func (o *PostDeleteRetweetRequestVariables) GetSourceTweetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceTweetId, true
}

// SetSourceTweetId sets field value
func (o *PostDeleteRetweetRequestVariables) SetSourceTweetId(v string) {
	o.SourceTweetId = v
}

func (o PostDeleteRetweetRequestVariables) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostDeleteRetweetRequestVariables) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["dark_request"] = o.DarkRequest
	toSerialize["source_tweet_id"] = o.SourceTweetId
	return toSerialize, nil
}

func (o *PostDeleteRetweetRequestVariables) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"dark_request",
		"source_tweet_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPostDeleteRetweetRequestVariables := _PostDeleteRetweetRequestVariables{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPostDeleteRetweetRequestVariables)

	if err != nil {
		return err
	}

	*o = PostDeleteRetweetRequestVariables(varPostDeleteRetweetRequestVariables)

	return err
}

type NullablePostDeleteRetweetRequestVariables struct {
	value *PostDeleteRetweetRequestVariables
	isSet bool
}

func (v NullablePostDeleteRetweetRequestVariables) Get() *PostDeleteRetweetRequestVariables {
	return v.value
}

func (v *NullablePostDeleteRetweetRequestVariables) Set(val *PostDeleteRetweetRequestVariables) {
	v.value = val
	v.isSet = true
}

func (v NullablePostDeleteRetweetRequestVariables) IsSet() bool {
	return v.isSet
}

func (v *NullablePostDeleteRetweetRequestVariables) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostDeleteRetweetRequestVariables(val *PostDeleteRetweetRequestVariables) *NullablePostDeleteRetweetRequestVariables {
	return &NullablePostDeleteRetweetRequestVariables{value: val, isSet: true}
}

func (v NullablePostDeleteRetweetRequestVariables) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostDeleteRetweetRequestVariables) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


