/*
Twitter OpenAPI

Twitter OpenAPI(Swagger) specification

API version: 0.0.1
Contact: yuki@yuki0311.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TweetCardLegacyBindingValueData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TweetCardLegacyBindingValueData{}

// TweetCardLegacyBindingValueData struct for TweetCardLegacyBindingValueData
type TweetCardLegacyBindingValueData struct {
	BooleanValue *bool `json:"boolean_value,omitempty"`
	ImageColorValue map[string]interface{} `json:"image_color_value,omitempty"`
	ImageValue *TweetCardLegacyBindingValueDataImage `json:"image_value,omitempty"`
	ScribeKey *string `json:"scribe_key,omitempty"`
	StringValue *string `json:"string_value,omitempty"`
	Type string `json:"type"`
	UserValue *UserValue `json:"user_value,omitempty"`
}

type _TweetCardLegacyBindingValueData TweetCardLegacyBindingValueData

// NewTweetCardLegacyBindingValueData instantiates a new TweetCardLegacyBindingValueData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTweetCardLegacyBindingValueData(type_ string) *TweetCardLegacyBindingValueData {
	this := TweetCardLegacyBindingValueData{}
	this.Type = type_
	return &this
}

// NewTweetCardLegacyBindingValueDataWithDefaults instantiates a new TweetCardLegacyBindingValueData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTweetCardLegacyBindingValueDataWithDefaults() *TweetCardLegacyBindingValueData {
	this := TweetCardLegacyBindingValueData{}
	return &this
}

// GetBooleanValue returns the BooleanValue field value if set, zero value otherwise.
func (o *TweetCardLegacyBindingValueData) GetBooleanValue() bool {
	if o == nil || IsNil(o.BooleanValue) {
		var ret bool
		return ret
	}
	return *o.BooleanValue
}

// GetBooleanValueOk returns a tuple with the BooleanValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TweetCardLegacyBindingValueData) GetBooleanValueOk() (*bool, bool) {
	if o == nil || IsNil(o.BooleanValue) {
		return nil, false
	}
	return o.BooleanValue, true
}

// HasBooleanValue returns a boolean if a field has been set.
func (o *TweetCardLegacyBindingValueData) HasBooleanValue() bool {
	if o != nil && !IsNil(o.BooleanValue) {
		return true
	}

	return false
}

// SetBooleanValue gets a reference to the given bool and assigns it to the BooleanValue field.
func (o *TweetCardLegacyBindingValueData) SetBooleanValue(v bool) {
	o.BooleanValue = &v
}

// GetImageColorValue returns the ImageColorValue field value if set, zero value otherwise.
func (o *TweetCardLegacyBindingValueData) GetImageColorValue() map[string]interface{} {
	if o == nil || IsNil(o.ImageColorValue) {
		var ret map[string]interface{}
		return ret
	}
	return o.ImageColorValue
}

// GetImageColorValueOk returns a tuple with the ImageColorValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TweetCardLegacyBindingValueData) GetImageColorValueOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ImageColorValue) {
		return map[string]interface{}{}, false
	}
	return o.ImageColorValue, true
}

// HasImageColorValue returns a boolean if a field has been set.
func (o *TweetCardLegacyBindingValueData) HasImageColorValue() bool {
	if o != nil && !IsNil(o.ImageColorValue) {
		return true
	}

	return false
}

// SetImageColorValue gets a reference to the given map[string]interface{} and assigns it to the ImageColorValue field.
func (o *TweetCardLegacyBindingValueData) SetImageColorValue(v map[string]interface{}) {
	o.ImageColorValue = v
}

// GetImageValue returns the ImageValue field value if set, zero value otherwise.
func (o *TweetCardLegacyBindingValueData) GetImageValue() TweetCardLegacyBindingValueDataImage {
	if o == nil || IsNil(o.ImageValue) {
		var ret TweetCardLegacyBindingValueDataImage
		return ret
	}
	return *o.ImageValue
}

// GetImageValueOk returns a tuple with the ImageValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TweetCardLegacyBindingValueData) GetImageValueOk() (*TweetCardLegacyBindingValueDataImage, bool) {
	if o == nil || IsNil(o.ImageValue) {
		return nil, false
	}
	return o.ImageValue, true
}

// HasImageValue returns a boolean if a field has been set.
func (o *TweetCardLegacyBindingValueData) HasImageValue() bool {
	if o != nil && !IsNil(o.ImageValue) {
		return true
	}

	return false
}

// SetImageValue gets a reference to the given TweetCardLegacyBindingValueDataImage and assigns it to the ImageValue field.
func (o *TweetCardLegacyBindingValueData) SetImageValue(v TweetCardLegacyBindingValueDataImage) {
	o.ImageValue = &v
}

// GetScribeKey returns the ScribeKey field value if set, zero value otherwise.
func (o *TweetCardLegacyBindingValueData) GetScribeKey() string {
	if o == nil || IsNil(o.ScribeKey) {
		var ret string
		return ret
	}
	return *o.ScribeKey
}

// GetScribeKeyOk returns a tuple with the ScribeKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TweetCardLegacyBindingValueData) GetScribeKeyOk() (*string, bool) {
	if o == nil || IsNil(o.ScribeKey) {
		return nil, false
	}
	return o.ScribeKey, true
}

// HasScribeKey returns a boolean if a field has been set.
func (o *TweetCardLegacyBindingValueData) HasScribeKey() bool {
	if o != nil && !IsNil(o.ScribeKey) {
		return true
	}

	return false
}

// SetScribeKey gets a reference to the given string and assigns it to the ScribeKey field.
func (o *TweetCardLegacyBindingValueData) SetScribeKey(v string) {
	o.ScribeKey = &v
}

// GetStringValue returns the StringValue field value if set, zero value otherwise.
func (o *TweetCardLegacyBindingValueData) GetStringValue() string {
	if o == nil || IsNil(o.StringValue) {
		var ret string
		return ret
	}
	return *o.StringValue
}

// GetStringValueOk returns a tuple with the StringValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TweetCardLegacyBindingValueData) GetStringValueOk() (*string, bool) {
	if o == nil || IsNil(o.StringValue) {
		return nil, false
	}
	return o.StringValue, true
}

// HasStringValue returns a boolean if a field has been set.
func (o *TweetCardLegacyBindingValueData) HasStringValue() bool {
	if o != nil && !IsNil(o.StringValue) {
		return true
	}

	return false
}

// SetStringValue gets a reference to the given string and assigns it to the StringValue field.
func (o *TweetCardLegacyBindingValueData) SetStringValue(v string) {
	o.StringValue = &v
}

// GetType returns the Type field value
func (o *TweetCardLegacyBindingValueData) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *TweetCardLegacyBindingValueData) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *TweetCardLegacyBindingValueData) SetType(v string) {
	o.Type = v
}

// GetUserValue returns the UserValue field value if set, zero value otherwise.
func (o *TweetCardLegacyBindingValueData) GetUserValue() UserValue {
	if o == nil || IsNil(o.UserValue) {
		var ret UserValue
		return ret
	}
	return *o.UserValue
}

// GetUserValueOk returns a tuple with the UserValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TweetCardLegacyBindingValueData) GetUserValueOk() (*UserValue, bool) {
	if o == nil || IsNil(o.UserValue) {
		return nil, false
	}
	return o.UserValue, true
}

// HasUserValue returns a boolean if a field has been set.
func (o *TweetCardLegacyBindingValueData) HasUserValue() bool {
	if o != nil && !IsNil(o.UserValue) {
		return true
	}

	return false
}

// SetUserValue gets a reference to the given UserValue and assigns it to the UserValue field.
func (o *TweetCardLegacyBindingValueData) SetUserValue(v UserValue) {
	o.UserValue = &v
}

func (o TweetCardLegacyBindingValueData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TweetCardLegacyBindingValueData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BooleanValue) {
		toSerialize["boolean_value"] = o.BooleanValue
	}
	if !IsNil(o.ImageColorValue) {
		toSerialize["image_color_value"] = o.ImageColorValue
	}
	if !IsNil(o.ImageValue) {
		toSerialize["image_value"] = o.ImageValue
	}
	if !IsNil(o.ScribeKey) {
		toSerialize["scribe_key"] = o.ScribeKey
	}
	if !IsNil(o.StringValue) {
		toSerialize["string_value"] = o.StringValue
	}
	toSerialize["type"] = o.Type
	if !IsNil(o.UserValue) {
		toSerialize["user_value"] = o.UserValue
	}
	return toSerialize, nil
}

func (o *TweetCardLegacyBindingValueData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTweetCardLegacyBindingValueData := _TweetCardLegacyBindingValueData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTweetCardLegacyBindingValueData)

	if err != nil {
		return err
	}

	*o = TweetCardLegacyBindingValueData(varTweetCardLegacyBindingValueData)

	return err
}

type NullableTweetCardLegacyBindingValueData struct {
	value *TweetCardLegacyBindingValueData
	isSet bool
}

func (v NullableTweetCardLegacyBindingValueData) Get() *TweetCardLegacyBindingValueData {
	return v.value
}

func (v *NullableTweetCardLegacyBindingValueData) Set(val *TweetCardLegacyBindingValueData) {
	v.value = val
	v.isSet = true
}

func (v NullableTweetCardLegacyBindingValueData) IsSet() bool {
	return v.isSet
}

func (v *NullableTweetCardLegacyBindingValueData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTweetCardLegacyBindingValueData(val *TweetCardLegacyBindingValueData) *NullableTweetCardLegacyBindingValueData {
	return &NullableTweetCardLegacyBindingValueData{value: val, isSet: true}
}

func (v NullableTweetCardLegacyBindingValueData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTweetCardLegacyBindingValueData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


