/*
Twitter OpenAPI

Twitter OpenAPI(Swagger) specification

API version: 0.0.1
Contact: yuki@yuki0311.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OtherResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OtherResponse{}

// OtherResponse struct for OtherResponse
type OtherResponse struct {
	Session *Session `json:"Session,omitempty"`
}

// NewOtherResponse instantiates a new OtherResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOtherResponse() *OtherResponse {
	this := OtherResponse{}
	return &this
}

// NewOtherResponseWithDefaults instantiates a new OtherResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOtherResponseWithDefaults() *OtherResponse {
	this := OtherResponse{}
	return &this
}

// GetSession returns the Session field value if set, zero value otherwise.
func (o *OtherResponse) GetSession() Session {
	if o == nil || IsNil(o.Session) {
		var ret Session
		return ret
	}
	return *o.Session
}

// GetSessionOk returns a tuple with the Session field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OtherResponse) GetSessionOk() (*Session, bool) {
	if o == nil || IsNil(o.Session) {
		return nil, false
	}
	return o.Session, true
}

// HasSession returns a boolean if a field has been set.
func (o *OtherResponse) HasSession() bool {
	if o != nil && !IsNil(o.Session) {
		return true
	}

	return false
}

// SetSession gets a reference to the given Session and assigns it to the Session field.
func (o *OtherResponse) SetSession(v Session) {
	o.Session = &v
}

func (o OtherResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OtherResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Session) {
		toSerialize["Session"] = o.Session
	}
	return toSerialize, nil
}

type NullableOtherResponse struct {
	value *OtherResponse
	isSet bool
}

func (v NullableOtherResponse) Get() *OtherResponse {
	return v.value
}

func (v *NullableOtherResponse) Set(val *OtherResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableOtherResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableOtherResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOtherResponse(val *OtherResponse) *NullableOtherResponse {
	return &NullableOtherResponse{value: val, isSet: true}
}

func (v NullableOtherResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOtherResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


