/*
Twitter OpenAPI

Twitter OpenAPI(Swagger) specification

API version: 0.0.1
Contact: yuki@yuki0311.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the TweetInterstitialText type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TweetInterstitialText{}

// TweetInterstitialText struct for TweetInterstitialText
type TweetInterstitialText struct {
	Entities []TweetInterstitialTextEntity `json:"entities"`
	Rtl      bool                          `json:"rtl"`
	Text     string                        `json:"text"`
}

type _TweetInterstitialText TweetInterstitialText

// NewTweetInterstitialText instantiates a new TweetInterstitialText object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTweetInterstitialText(entities []TweetInterstitialTextEntity, rtl bool, text string) *TweetInterstitialText {
	this := TweetInterstitialText{}
	this.Entities = entities
	this.Rtl = rtl
	this.Text = text
	return &this
}

// NewTweetInterstitialTextWithDefaults instantiates a new TweetInterstitialText object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTweetInterstitialTextWithDefaults() *TweetInterstitialText {
	this := TweetInterstitialText{}
	return &this
}

// GetEntities returns the Entities field value
func (o *TweetInterstitialText) GetEntities() []TweetInterstitialTextEntity {
	if o == nil {
		var ret []TweetInterstitialTextEntity
		return ret
	}

	return o.Entities
}

// GetEntitiesOk returns a tuple with the Entities field value
// and a boolean to check if the value has been set.
func (o *TweetInterstitialText) GetEntitiesOk() ([]TweetInterstitialTextEntity, bool) {
	if o == nil {
		return nil, false
	}
	return o.Entities, true
}

// SetEntities sets field value
func (o *TweetInterstitialText) SetEntities(v []TweetInterstitialTextEntity) {
	o.Entities = v
}

// GetRtl returns the Rtl field value
func (o *TweetInterstitialText) GetRtl() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Rtl
}

// GetRtlOk returns a tuple with the Rtl field value
// and a boolean to check if the value has been set.
func (o *TweetInterstitialText) GetRtlOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Rtl, true
}

// SetRtl sets field value
func (o *TweetInterstitialText) SetRtl(v bool) {
	o.Rtl = v
}

// GetText returns the Text field value
func (o *TweetInterstitialText) GetText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Text
}

// GetTextOk returns a tuple with the Text field value
// and a boolean to check if the value has been set.
func (o *TweetInterstitialText) GetTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Text, true
}

// SetText sets field value
func (o *TweetInterstitialText) SetText(v string) {
	o.Text = v
}

func (o TweetInterstitialText) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TweetInterstitialText) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["entities"] = o.Entities
	toSerialize["rtl"] = o.Rtl
	toSerialize["text"] = o.Text
	return toSerialize, nil
}

func (o *TweetInterstitialText) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"entities",
		"rtl",
		"text",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTweetInterstitialText := _TweetInterstitialText{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTweetInterstitialText)

	if err != nil {
		return err
	}

	*o = TweetInterstitialText(varTweetInterstitialText)

	return err
}

type NullableTweetInterstitialText struct {
	value *TweetInterstitialText
	isSet bool
}

func (v NullableTweetInterstitialText) Get() *TweetInterstitialText {
	return v.value
}

func (v *NullableTweetInterstitialText) Set(val *TweetInterstitialText) {
	v.value = val
	v.isSet = true
}

func (v NullableTweetInterstitialText) IsSet() bool {
	return v.isSet
}

func (v *NullableTweetInterstitialText) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTweetInterstitialText(val *TweetInterstitialText) *NullableTweetInterstitialText {
	return &NullableTweetInterstitialText{value: val, isSet: true}
}

func (v NullableTweetInterstitialText) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTweetInterstitialText) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
