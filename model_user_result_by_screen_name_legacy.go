/*
Twitter OpenAPI

Twitter OpenAPI(Swagger) specification

API version: 0.0.1
Contact: yuki@yuki0311.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UserResultByScreenNameLegacy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserResultByScreenNameLegacy{}

// UserResultByScreenNameLegacy struct for UserResultByScreenNameLegacy
type UserResultByScreenNameLegacy struct {
	BlockedBy  *bool   `json:"blocked_by,omitempty"`
	Blocking   *bool   `json:"blocking,omitempty"`
	FollowedBy *bool   `json:"followed_by,omitempty"`
	Following  *bool   `json:"following,omitempty"`
	Name       *string `json:"name,omitempty"`
	Protected  *bool   `json:"protected,omitempty"`
	ScreenName *string `json:"screen_name,omitempty"`
}

// NewUserResultByScreenNameLegacy instantiates a new UserResultByScreenNameLegacy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserResultByScreenNameLegacy() *UserResultByScreenNameLegacy {
	this := UserResultByScreenNameLegacy{}
	return &this
}

// NewUserResultByScreenNameLegacyWithDefaults instantiates a new UserResultByScreenNameLegacy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserResultByScreenNameLegacyWithDefaults() *UserResultByScreenNameLegacy {
	this := UserResultByScreenNameLegacy{}
	return &this
}

// GetBlockedBy returns the BlockedBy field value if set, zero value otherwise.
func (o *UserResultByScreenNameLegacy) GetBlockedBy() bool {
	if o == nil || IsNil(o.BlockedBy) {
		var ret bool
		return ret
	}
	return *o.BlockedBy
}

// GetBlockedByOk returns a tuple with the BlockedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserResultByScreenNameLegacy) GetBlockedByOk() (*bool, bool) {
	if o == nil || IsNil(o.BlockedBy) {
		return nil, false
	}
	return o.BlockedBy, true
}

// HasBlockedBy returns a boolean if a field has been set.
func (o *UserResultByScreenNameLegacy) HasBlockedBy() bool {
	if o != nil && !IsNil(o.BlockedBy) {
		return true
	}

	return false
}

// SetBlockedBy gets a reference to the given bool and assigns it to the BlockedBy field.
func (o *UserResultByScreenNameLegacy) SetBlockedBy(v bool) {
	o.BlockedBy = &v
}

// GetBlocking returns the Blocking field value if set, zero value otherwise.
func (o *UserResultByScreenNameLegacy) GetBlocking() bool {
	if o == nil || IsNil(o.Blocking) {
		var ret bool
		return ret
	}
	return *o.Blocking
}

// GetBlockingOk returns a tuple with the Blocking field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserResultByScreenNameLegacy) GetBlockingOk() (*bool, bool) {
	if o == nil || IsNil(o.Blocking) {
		return nil, false
	}
	return o.Blocking, true
}

// HasBlocking returns a boolean if a field has been set.
func (o *UserResultByScreenNameLegacy) HasBlocking() bool {
	if o != nil && !IsNil(o.Blocking) {
		return true
	}

	return false
}

// SetBlocking gets a reference to the given bool and assigns it to the Blocking field.
func (o *UserResultByScreenNameLegacy) SetBlocking(v bool) {
	o.Blocking = &v
}

// GetFollowedBy returns the FollowedBy field value if set, zero value otherwise.
func (o *UserResultByScreenNameLegacy) GetFollowedBy() bool {
	if o == nil || IsNil(o.FollowedBy) {
		var ret bool
		return ret
	}
	return *o.FollowedBy
}

// GetFollowedByOk returns a tuple with the FollowedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserResultByScreenNameLegacy) GetFollowedByOk() (*bool, bool) {
	if o == nil || IsNil(o.FollowedBy) {
		return nil, false
	}
	return o.FollowedBy, true
}

// HasFollowedBy returns a boolean if a field has been set.
func (o *UserResultByScreenNameLegacy) HasFollowedBy() bool {
	if o != nil && !IsNil(o.FollowedBy) {
		return true
	}

	return false
}

// SetFollowedBy gets a reference to the given bool and assigns it to the FollowedBy field.
func (o *UserResultByScreenNameLegacy) SetFollowedBy(v bool) {
	o.FollowedBy = &v
}

// GetFollowing returns the Following field value if set, zero value otherwise.
func (o *UserResultByScreenNameLegacy) GetFollowing() bool {
	if o == nil || IsNil(o.Following) {
		var ret bool
		return ret
	}
	return *o.Following
}

// GetFollowingOk returns a tuple with the Following field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserResultByScreenNameLegacy) GetFollowingOk() (*bool, bool) {
	if o == nil || IsNil(o.Following) {
		return nil, false
	}
	return o.Following, true
}

// HasFollowing returns a boolean if a field has been set.
func (o *UserResultByScreenNameLegacy) HasFollowing() bool {
	if o != nil && !IsNil(o.Following) {
		return true
	}

	return false
}

// SetFollowing gets a reference to the given bool and assigns it to the Following field.
func (o *UserResultByScreenNameLegacy) SetFollowing(v bool) {
	o.Following = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UserResultByScreenNameLegacy) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserResultByScreenNameLegacy) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UserResultByScreenNameLegacy) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UserResultByScreenNameLegacy) SetName(v string) {
	o.Name = &v
}

// GetProtected returns the Protected field value if set, zero value otherwise.
func (o *UserResultByScreenNameLegacy) GetProtected() bool {
	if o == nil || IsNil(o.Protected) {
		var ret bool
		return ret
	}
	return *o.Protected
}

// GetProtectedOk returns a tuple with the Protected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserResultByScreenNameLegacy) GetProtectedOk() (*bool, bool) {
	if o == nil || IsNil(o.Protected) {
		return nil, false
	}
	return o.Protected, true
}

// HasProtected returns a boolean if a field has been set.
func (o *UserResultByScreenNameLegacy) HasProtected() bool {
	if o != nil && !IsNil(o.Protected) {
		return true
	}

	return false
}

// SetProtected gets a reference to the given bool and assigns it to the Protected field.
func (o *UserResultByScreenNameLegacy) SetProtected(v bool) {
	o.Protected = &v
}

// GetScreenName returns the ScreenName field value if set, zero value otherwise.
func (o *UserResultByScreenNameLegacy) GetScreenName() string {
	if o == nil || IsNil(o.ScreenName) {
		var ret string
		return ret
	}
	return *o.ScreenName
}

// GetScreenNameOk returns a tuple with the ScreenName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserResultByScreenNameLegacy) GetScreenNameOk() (*string, bool) {
	if o == nil || IsNil(o.ScreenName) {
		return nil, false
	}
	return o.ScreenName, true
}

// HasScreenName returns a boolean if a field has been set.
func (o *UserResultByScreenNameLegacy) HasScreenName() bool {
	if o != nil && !IsNil(o.ScreenName) {
		return true
	}

	return false
}

// SetScreenName gets a reference to the given string and assigns it to the ScreenName field.
func (o *UserResultByScreenNameLegacy) SetScreenName(v string) {
	o.ScreenName = &v
}

func (o UserResultByScreenNameLegacy) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserResultByScreenNameLegacy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BlockedBy) {
		toSerialize["blocked_by"] = o.BlockedBy
	}
	if !IsNil(o.Blocking) {
		toSerialize["blocking"] = o.Blocking
	}
	if !IsNil(o.FollowedBy) {
		toSerialize["followed_by"] = o.FollowedBy
	}
	if !IsNil(o.Following) {
		toSerialize["following"] = o.Following
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Protected) {
		toSerialize["protected"] = o.Protected
	}
	if !IsNil(o.ScreenName) {
		toSerialize["screen_name"] = o.ScreenName
	}
	return toSerialize, nil
}

type NullableUserResultByScreenNameLegacy struct {
	value *UserResultByScreenNameLegacy
	isSet bool
}

func (v NullableUserResultByScreenNameLegacy) Get() *UserResultByScreenNameLegacy {
	return v.value
}

func (v *NullableUserResultByScreenNameLegacy) Set(val *UserResultByScreenNameLegacy) {
	v.value = val
	v.isSet = true
}

func (v NullableUserResultByScreenNameLegacy) IsSet() bool {
	return v.isSet
}

func (v *NullableUserResultByScreenNameLegacy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserResultByScreenNameLegacy(val *UserResultByScreenNameLegacy) *NullableUserResultByScreenNameLegacy {
	return &NullableUserResultByScreenNameLegacy{value: val, isSet: true}
}

func (v NullableUserResultByScreenNameLegacy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserResultByScreenNameLegacy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
