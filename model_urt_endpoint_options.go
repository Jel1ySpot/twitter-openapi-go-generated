/*
Twitter OpenAPI

Twitter OpenAPI(Swagger) specification

API version: 0.0.1
Contact: yuki@yuki0311.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the UrtEndpointOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UrtEndpointOptions{}

// UrtEndpointOptions struct for UrtEndpointOptions
type UrtEndpointOptions struct {
	RequestParams []UrtEndpointRequestParams `json:"requestParams"`
	Title         string                     `json:"title"`
}

type _UrtEndpointOptions UrtEndpointOptions

// NewUrtEndpointOptions instantiates a new UrtEndpointOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUrtEndpointOptions(requestParams []UrtEndpointRequestParams, title string) *UrtEndpointOptions {
	this := UrtEndpointOptions{}
	this.RequestParams = requestParams
	this.Title = title
	return &this
}

// NewUrtEndpointOptionsWithDefaults instantiates a new UrtEndpointOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUrtEndpointOptionsWithDefaults() *UrtEndpointOptions {
	this := UrtEndpointOptions{}
	return &this
}

// GetRequestParams returns the RequestParams field value
func (o *UrtEndpointOptions) GetRequestParams() []UrtEndpointRequestParams {
	if o == nil {
		var ret []UrtEndpointRequestParams
		return ret
	}

	return o.RequestParams
}

// GetRequestParamsOk returns a tuple with the RequestParams field value
// and a boolean to check if the value has been set.
func (o *UrtEndpointOptions) GetRequestParamsOk() ([]UrtEndpointRequestParams, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequestParams, true
}

// SetRequestParams sets field value
func (o *UrtEndpointOptions) SetRequestParams(v []UrtEndpointRequestParams) {
	o.RequestParams = v
}

// GetTitle returns the Title field value
func (o *UrtEndpointOptions) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *UrtEndpointOptions) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *UrtEndpointOptions) SetTitle(v string) {
	o.Title = v
}

func (o UrtEndpointOptions) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UrtEndpointOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["requestParams"] = o.RequestParams
	toSerialize["title"] = o.Title
	return toSerialize, nil
}

func (o *UrtEndpointOptions) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"requestParams",
		"title",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUrtEndpointOptions := _UrtEndpointOptions{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUrtEndpointOptions)

	if err != nil {
		return err
	}

	*o = UrtEndpointOptions(varUrtEndpointOptions)

	return err
}

type NullableUrtEndpointOptions struct {
	value *UrtEndpointOptions
	isSet bool
}

func (v NullableUrtEndpointOptions) Get() *UrtEndpointOptions {
	return v.value
}

func (v *NullableUrtEndpointOptions) Set(val *UrtEndpointOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableUrtEndpointOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableUrtEndpointOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUrtEndpointOptions(val *UrtEndpointOptions) *NullableUrtEndpointOptions {
	return &NullableUrtEndpointOptions{value: val, isSet: true}
}

func (v NullableUrtEndpointOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUrtEndpointOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
