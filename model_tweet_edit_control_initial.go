/*
Twitter OpenAPI

Twitter OpenAPI(Swagger) specification

API version: 0.0.1
Contact: yuki@yuki0311.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the TweetEditControlInitial type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TweetEditControlInitial{}

// TweetEditControlInitial struct for TweetEditControlInitial
type TweetEditControlInitial struct {
	EditTweetIds       []string `json:"edit_tweet_ids"`
	EditableUntilMsecs string   `json:"editable_until_msecs" validate:"regexp=^[0-9]+$"`
	EditsRemaining     string   `json:"edits_remaining" validate:"regexp=^[0-9]+$"`
	IsEditEligible     bool     `json:"is_edit_eligible"`
}

type _TweetEditControlInitial TweetEditControlInitial

// NewTweetEditControlInitial instantiates a new TweetEditControlInitial object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTweetEditControlInitial(editTweetIds []string, editableUntilMsecs string, editsRemaining string, isEditEligible bool) *TweetEditControlInitial {
	this := TweetEditControlInitial{}
	this.EditTweetIds = editTweetIds
	this.EditableUntilMsecs = editableUntilMsecs
	this.EditsRemaining = editsRemaining
	this.IsEditEligible = isEditEligible
	return &this
}

// NewTweetEditControlInitialWithDefaults instantiates a new TweetEditControlInitial object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTweetEditControlInitialWithDefaults() *TweetEditControlInitial {
	this := TweetEditControlInitial{}
	return &this
}

// GetEditTweetIds returns the EditTweetIds field value
func (o *TweetEditControlInitial) GetEditTweetIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.EditTweetIds
}

// GetEditTweetIdsOk returns a tuple with the EditTweetIds field value
// and a boolean to check if the value has been set.
func (o *TweetEditControlInitial) GetEditTweetIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EditTweetIds, true
}

// SetEditTweetIds sets field value
func (o *TweetEditControlInitial) SetEditTweetIds(v []string) {
	o.EditTweetIds = v
}

// GetEditableUntilMsecs returns the EditableUntilMsecs field value
func (o *TweetEditControlInitial) GetEditableUntilMsecs() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EditableUntilMsecs
}

// GetEditableUntilMsecsOk returns a tuple with the EditableUntilMsecs field value
// and a boolean to check if the value has been set.
func (o *TweetEditControlInitial) GetEditableUntilMsecsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EditableUntilMsecs, true
}

// SetEditableUntilMsecs sets field value
func (o *TweetEditControlInitial) SetEditableUntilMsecs(v string) {
	o.EditableUntilMsecs = v
}

// GetEditsRemaining returns the EditsRemaining field value
func (o *TweetEditControlInitial) GetEditsRemaining() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EditsRemaining
}

// GetEditsRemainingOk returns a tuple with the EditsRemaining field value
// and a boolean to check if the value has been set.
func (o *TweetEditControlInitial) GetEditsRemainingOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EditsRemaining, true
}

// SetEditsRemaining sets field value
func (o *TweetEditControlInitial) SetEditsRemaining(v string) {
	o.EditsRemaining = v
}

// GetIsEditEligible returns the IsEditEligible field value
func (o *TweetEditControlInitial) GetIsEditEligible() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsEditEligible
}

// GetIsEditEligibleOk returns a tuple with the IsEditEligible field value
// and a boolean to check if the value has been set.
func (o *TweetEditControlInitial) GetIsEditEligibleOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsEditEligible, true
}

// SetIsEditEligible sets field value
func (o *TweetEditControlInitial) SetIsEditEligible(v bool) {
	o.IsEditEligible = v
}

func (o TweetEditControlInitial) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TweetEditControlInitial) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["edit_tweet_ids"] = o.EditTweetIds
	toSerialize["editable_until_msecs"] = o.EditableUntilMsecs
	toSerialize["edits_remaining"] = o.EditsRemaining
	toSerialize["is_edit_eligible"] = o.IsEditEligible
	return toSerialize, nil
}

func (o *TweetEditControlInitial) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"edit_tweet_ids",
		"editable_until_msecs",
		"edits_remaining",
		"is_edit_eligible",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTweetEditControlInitial := _TweetEditControlInitial{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTweetEditControlInitial)

	if err != nil {
		return err
	}

	*o = TweetEditControlInitial(varTweetEditControlInitial)

	return err
}

type NullableTweetEditControlInitial struct {
	value *TweetEditControlInitial
	isSet bool
}

func (v NullableTweetEditControlInitial) Get() *TweetEditControlInitial {
	return v.value
}

func (v *NullableTweetEditControlInitial) Set(val *TweetEditControlInitial) {
	v.value = val
	v.isSet = true
}

func (v NullableTweetEditControlInitial) IsSet() bool {
	return v.isSet
}

func (v *NullableTweetEditControlInitial) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTweetEditControlInitial(val *TweetEditControlInitial) *NullableTweetEditControlInitial {
	return &NullableTweetEditControlInitial{value: val, isSet: true}
}

func (v NullableTweetEditControlInitial) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTweetEditControlInitial) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
