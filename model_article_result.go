/*
Twitter OpenAPI

Twitter OpenAPI(Swagger) specification

API version: 0.0.1
Contact: yuki@yuki0311.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ArticleResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ArticleResult{}

// ArticleResult struct for ArticleResult
type ArticleResult struct {
	CoverMedia ArticleCoverMedia `json:"cover_media"`
	Id string `json:"id"`
	LifecycleState *ArticleLifecycleState `json:"lifecycle_state,omitempty"`
	Metadata ArticleMetadata `json:"metadata"`
	PreviewText string `json:"preview_text"`
	RestId string `json:"rest_id" validate:"regexp=^[0-9]+$"`
	Title string `json:"title"`
}

type _ArticleResult ArticleResult

// NewArticleResult instantiates a new ArticleResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArticleResult(coverMedia ArticleCoverMedia, id string, metadata ArticleMetadata, previewText string, restId string, title string) *ArticleResult {
	this := ArticleResult{}
	this.CoverMedia = coverMedia
	this.Id = id
	this.Metadata = metadata
	this.PreviewText = previewText
	this.RestId = restId
	this.Title = title
	return &this
}

// NewArticleResultWithDefaults instantiates a new ArticleResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewArticleResultWithDefaults() *ArticleResult {
	this := ArticleResult{}
	return &this
}

// GetCoverMedia returns the CoverMedia field value
func (o *ArticleResult) GetCoverMedia() ArticleCoverMedia {
	if o == nil {
		var ret ArticleCoverMedia
		return ret
	}

	return o.CoverMedia
}

// GetCoverMediaOk returns a tuple with the CoverMedia field value
// and a boolean to check if the value has been set.
func (o *ArticleResult) GetCoverMediaOk() (*ArticleCoverMedia, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CoverMedia, true
}

// SetCoverMedia sets field value
func (o *ArticleResult) SetCoverMedia(v ArticleCoverMedia) {
	o.CoverMedia = v
}

// GetId returns the Id field value
func (o *ArticleResult) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ArticleResult) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ArticleResult) SetId(v string) {
	o.Id = v
}

// GetLifecycleState returns the LifecycleState field value if set, zero value otherwise.
func (o *ArticleResult) GetLifecycleState() ArticleLifecycleState {
	if o == nil || IsNil(o.LifecycleState) {
		var ret ArticleLifecycleState
		return ret
	}
	return *o.LifecycleState
}

// GetLifecycleStateOk returns a tuple with the LifecycleState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArticleResult) GetLifecycleStateOk() (*ArticleLifecycleState, bool) {
	if o == nil || IsNil(o.LifecycleState) {
		return nil, false
	}
	return o.LifecycleState, true
}

// HasLifecycleState returns a boolean if a field has been set.
func (o *ArticleResult) HasLifecycleState() bool {
	if o != nil && !IsNil(o.LifecycleState) {
		return true
	}

	return false
}

// SetLifecycleState gets a reference to the given ArticleLifecycleState and assigns it to the LifecycleState field.
func (o *ArticleResult) SetLifecycleState(v ArticleLifecycleState) {
	o.LifecycleState = &v
}

// GetMetadata returns the Metadata field value
func (o *ArticleResult) GetMetadata() ArticleMetadata {
	if o == nil {
		var ret ArticleMetadata
		return ret
	}

	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value
// and a boolean to check if the value has been set.
func (o *ArticleResult) GetMetadataOk() (*ArticleMetadata, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Metadata, true
}

// SetMetadata sets field value
func (o *ArticleResult) SetMetadata(v ArticleMetadata) {
	o.Metadata = v
}

// GetPreviewText returns the PreviewText field value
func (o *ArticleResult) GetPreviewText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PreviewText
}

// GetPreviewTextOk returns a tuple with the PreviewText field value
// and a boolean to check if the value has been set.
func (o *ArticleResult) GetPreviewTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PreviewText, true
}

// SetPreviewText sets field value
func (o *ArticleResult) SetPreviewText(v string) {
	o.PreviewText = v
}

// GetRestId returns the RestId field value
func (o *ArticleResult) GetRestId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RestId
}

// GetRestIdOk returns a tuple with the RestId field value
// and a boolean to check if the value has been set.
func (o *ArticleResult) GetRestIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RestId, true
}

// SetRestId sets field value
func (o *ArticleResult) SetRestId(v string) {
	o.RestId = v
}

// GetTitle returns the Title field value
func (o *ArticleResult) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *ArticleResult) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *ArticleResult) SetTitle(v string) {
	o.Title = v
}

func (o ArticleResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ArticleResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cover_media"] = o.CoverMedia
	toSerialize["id"] = o.Id
	if !IsNil(o.LifecycleState) {
		toSerialize["lifecycle_state"] = o.LifecycleState
	}
	toSerialize["metadata"] = o.Metadata
	toSerialize["preview_text"] = o.PreviewText
	toSerialize["rest_id"] = o.RestId
	toSerialize["title"] = o.Title
	return toSerialize, nil
}

func (o *ArticleResult) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"cover_media",
		"id",
		"metadata",
		"preview_text",
		"rest_id",
		"title",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varArticleResult := _ArticleResult{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varArticleResult)

	if err != nil {
		return err
	}

	*o = ArticleResult(varArticleResult)

	return err
}

type NullableArticleResult struct {
	value *ArticleResult
	isSet bool
}

func (v NullableArticleResult) Get() *ArticleResult {
	return v.value
}

func (v *NullableArticleResult) Set(val *ArticleResult) {
	v.value = val
	v.isSet = true
}

func (v NullableArticleResult) IsSet() bool {
	return v.isSet
}

func (v *NullableArticleResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArticleResult(val *ArticleResult) *NullableArticleResult {
	return &NullableArticleResult{value: val, isSet: true}
}

func (v NullableArticleResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArticleResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


