/*
Twitter OpenAPI

Twitter OpenAPI(Swagger) specification

API version: 0.0.1
Contact: yuki@yuki0311.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the TweetLegacyScopes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TweetLegacyScopes{}

// TweetLegacyScopes struct for TweetLegacyScopes
type TweetLegacyScopes struct {
	Followers bool `json:"followers"`
}

type _TweetLegacyScopes TweetLegacyScopes

// NewTweetLegacyScopes instantiates a new TweetLegacyScopes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTweetLegacyScopes(followers bool) *TweetLegacyScopes {
	this := TweetLegacyScopes{}
	this.Followers = followers
	return &this
}

// NewTweetLegacyScopesWithDefaults instantiates a new TweetLegacyScopes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTweetLegacyScopesWithDefaults() *TweetLegacyScopes {
	this := TweetLegacyScopes{}
	return &this
}

// GetFollowers returns the Followers field value
func (o *TweetLegacyScopes) GetFollowers() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Followers
}

// GetFollowersOk returns a tuple with the Followers field value
// and a boolean to check if the value has been set.
func (o *TweetLegacyScopes) GetFollowersOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Followers, true
}

// SetFollowers sets field value
func (o *TweetLegacyScopes) SetFollowers(v bool) {
	o.Followers = v
}

func (o TweetLegacyScopes) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TweetLegacyScopes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["followers"] = o.Followers
	return toSerialize, nil
}

func (o *TweetLegacyScopes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"followers",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTweetLegacyScopes := _TweetLegacyScopes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTweetLegacyScopes)

	if err != nil {
		return err
	}

	*o = TweetLegacyScopes(varTweetLegacyScopes)

	return err
}

type NullableTweetLegacyScopes struct {
	value *TweetLegacyScopes
	isSet bool
}

func (v NullableTweetLegacyScopes) Get() *TweetLegacyScopes {
	return v.value
}

func (v *NullableTweetLegacyScopes) Set(val *TweetLegacyScopes) {
	v.value = val
	v.isSet = true
}

func (v NullableTweetLegacyScopes) IsSet() bool {
	return v.isSet
}

func (v *NullableTweetLegacyScopes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTweetLegacyScopes(val *TweetLegacyScopes) *NullableTweetLegacyScopes {
	return &NullableTweetLegacyScopes{value: val, isSet: true}
}

func (v NullableTweetLegacyScopes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTweetLegacyScopes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
