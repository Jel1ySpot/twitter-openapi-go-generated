/*
Twitter OpenAPI

Twitter OpenAPI(Swagger) specification

API version: 0.0.1
Contact: yuki@yuki0311.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UserVerificationInfoReasonDescriptionEntities type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserVerificationInfoReasonDescriptionEntities{}

// UserVerificationInfoReasonDescriptionEntities struct for UserVerificationInfoReasonDescriptionEntities
type UserVerificationInfoReasonDescriptionEntities struct {
	FromIndex int32 `json:"from_index"`
	Ref UserVerificationInfoReasonDescriptionEntitiesRef `json:"ref"`
	ToIndex int32 `json:"to_index"`
}

type _UserVerificationInfoReasonDescriptionEntities UserVerificationInfoReasonDescriptionEntities

// NewUserVerificationInfoReasonDescriptionEntities instantiates a new UserVerificationInfoReasonDescriptionEntities object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserVerificationInfoReasonDescriptionEntities(fromIndex int32, ref UserVerificationInfoReasonDescriptionEntitiesRef, toIndex int32) *UserVerificationInfoReasonDescriptionEntities {
	this := UserVerificationInfoReasonDescriptionEntities{}
	this.FromIndex = fromIndex
	this.Ref = ref
	this.ToIndex = toIndex
	return &this
}

// NewUserVerificationInfoReasonDescriptionEntitiesWithDefaults instantiates a new UserVerificationInfoReasonDescriptionEntities object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserVerificationInfoReasonDescriptionEntitiesWithDefaults() *UserVerificationInfoReasonDescriptionEntities {
	this := UserVerificationInfoReasonDescriptionEntities{}
	return &this
}

// GetFromIndex returns the FromIndex field value
func (o *UserVerificationInfoReasonDescriptionEntities) GetFromIndex() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FromIndex
}

// GetFromIndexOk returns a tuple with the FromIndex field value
// and a boolean to check if the value has been set.
func (o *UserVerificationInfoReasonDescriptionEntities) GetFromIndexOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FromIndex, true
}

// SetFromIndex sets field value
func (o *UserVerificationInfoReasonDescriptionEntities) SetFromIndex(v int32) {
	o.FromIndex = v
}

// GetRef returns the Ref field value
func (o *UserVerificationInfoReasonDescriptionEntities) GetRef() UserVerificationInfoReasonDescriptionEntitiesRef {
	if o == nil {
		var ret UserVerificationInfoReasonDescriptionEntitiesRef
		return ret
	}

	return o.Ref
}

// GetRefOk returns a tuple with the Ref field value
// and a boolean to check if the value has been set.
func (o *UserVerificationInfoReasonDescriptionEntities) GetRefOk() (*UserVerificationInfoReasonDescriptionEntitiesRef, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ref, true
}

// SetRef sets field value
func (o *UserVerificationInfoReasonDescriptionEntities) SetRef(v UserVerificationInfoReasonDescriptionEntitiesRef) {
	o.Ref = v
}

// GetToIndex returns the ToIndex field value
func (o *UserVerificationInfoReasonDescriptionEntities) GetToIndex() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ToIndex
}

// GetToIndexOk returns a tuple with the ToIndex field value
// and a boolean to check if the value has been set.
func (o *UserVerificationInfoReasonDescriptionEntities) GetToIndexOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ToIndex, true
}

// SetToIndex sets field value
func (o *UserVerificationInfoReasonDescriptionEntities) SetToIndex(v int32) {
	o.ToIndex = v
}

func (o UserVerificationInfoReasonDescriptionEntities) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserVerificationInfoReasonDescriptionEntities) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["from_index"] = o.FromIndex
	toSerialize["ref"] = o.Ref
	toSerialize["to_index"] = o.ToIndex
	return toSerialize, nil
}

func (o *UserVerificationInfoReasonDescriptionEntities) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"from_index",
		"ref",
		"to_index",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUserVerificationInfoReasonDescriptionEntities := _UserVerificationInfoReasonDescriptionEntities{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUserVerificationInfoReasonDescriptionEntities)

	if err != nil {
		return err
	}

	*o = UserVerificationInfoReasonDescriptionEntities(varUserVerificationInfoReasonDescriptionEntities)

	return err
}

type NullableUserVerificationInfoReasonDescriptionEntities struct {
	value *UserVerificationInfoReasonDescriptionEntities
	isSet bool
}

func (v NullableUserVerificationInfoReasonDescriptionEntities) Get() *UserVerificationInfoReasonDescriptionEntities {
	return v.value
}

func (v *NullableUserVerificationInfoReasonDescriptionEntities) Set(val *UserVerificationInfoReasonDescriptionEntities) {
	v.value = val
	v.isSet = true
}

func (v NullableUserVerificationInfoReasonDescriptionEntities) IsSet() bool {
	return v.isSet
}

func (v *NullableUserVerificationInfoReasonDescriptionEntities) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserVerificationInfoReasonDescriptionEntities(val *UserVerificationInfoReasonDescriptionEntities) *NullableUserVerificationInfoReasonDescriptionEntities {
	return &NullableUserVerificationInfoReasonDescriptionEntities{value: val, isSet: true}
}

func (v NullableUserVerificationInfoReasonDescriptionEntities) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserVerificationInfoReasonDescriptionEntities) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


